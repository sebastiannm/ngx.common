{"version":3,"sources":["sebasdd-ngx-common.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","sebasddNgxCommon","core","Rx","Observable","prototype","common","this","of","concatMap","filter","map","operators","__extends","d","b","__","constructor","extendStatics","Object","create","paramParser","rawParams","codec","map$$1","Map","length","split","forEach","param","eqIdx","indexOf","_a","decodeKey","slice","decodeValue","key","val","list","get","push","set","standardEncoding","v","encodeURIComponent","replace","mightHaveBody","method","isArrayBuffer","value","ArrayBuffer","isBlob","Blob","isFormData","FormData","addBody","options","body","headers","observe","params","reportProgress","responseType","withCredentials","getResponseUrl","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","interceptingHandler","backend","interceptors","reduceRight","next","interceptor","HttpInterceptorHandler","getDOM","_DOM","setRootDomAdapter","adapter","getBaseElementHref","baseElement","document","querySelector","getAttribute","relativePath","url","urlParsingNode","createElement","setAttribute","pathname","charAt","supportsState","window","history","pushState","exportNgVar","name","COMPILED","ɵglobal","inspectNativeElement","element","getDebugNode","_ngProbeTokensToMap","tokens","reduce","prev","t","token","shimContentAttribute","componentShortId","CONTENT_ATTR","COMPONENT_REGEX","shimHostAttribute","HOST_ATTR","flattenStyles","compId","styles","target","i","style","Array","isArray","decoratePreventDefault","eventHandler","event","preventDefault","returnValue","checkNoSyntheticProp","nameKind","charCodeAt","AT_CHARCODE","Error","sanitizeUrl","String","match","SAFE_URL_PATTERN","DATA_URL_PATTERN","isDevMode","log","sanitizeSrcset","srcset","trim","join","getInertElement","inertElement","templateEl","DOM","doc","createHtmlDocument","html","appendChild","tagSet","tags","res","_i","merge","sets","arguments","sets_1","s","hasOwnProperty","checkClobberedElement","node","nextNode","contains","getOuterHTML","encodeEntities","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","stripCustomNsAttrs","el","attributeMap","_","attrName","removeAttribute","childNodesAsList","n","isElementNode","sanitizeHtml","defaultDoc","unsafeHtmlInput","containerEl","unsafeHtml","mXSSAttempts","parsedHtml","setInnerHTML","documentMode","getInnerHTML","sanitizer","SanitizingHtmlSerializer","safeHtml","sanitizeChildren","getTemplateContent","parent_1","child","removeChild","sanitizedSomething","e","hasBalancedQuotes","outsideSingle","outsideDouble","c","sanitizeStyle","urlMatch","URL_RE","SAFE_STYLE_VALUE","setPrototypeOf","__proto__","p","__assign","assign","call","HttpHandler","HttpBackend","HttpHeaders","_this","normalizedNames","lazyUpdate","lazyInit","line","index","name_1","toLowerCase","maybeSetNormalizedName","has","keys","values","init","from","getAll","append","clone","op","delete","lcName","copyFrom","update","applyUpdate","other","concat","base","undefined","apply","toDelete_1","existing","fn","HttpUrlEncodingCodec","encodeKey","k","encodeValue","decodeURIComponent","HttpParams","updates","cloneFrom","encoder","fromString","fromObject","toString","eKey","base_1","idx","splice","HttpRequest","third","fourth","toUpperCase","urlWithParams","qIdx","sep","serializeBody","JSON","stringify","detectContentTypeHeader","type","setHeaders","setParams","HttpEventType","Sent","UploadProgress","ResponseHeader","DownloadProgress","Response","User","nodeContains","HttpResponseBase","defaultStatus","defaultStatusText","status","statusText","ok","HttpHeaderResponse","_super","HttpResponse","HttpErrorResponse","message","error","HttpClient","handler","request","first","req","events$","handle","res$","head","jsonp","callbackParam","patch","post","put","decorators","Injectable","ctorParameters","intercept","HTTP_INTERCEPTORS","InjectionToken","NoopInterceptor","nextRequestId","JsonpCallbackContext","JsonpClientBackend","callbackMap","nextCallback","observer","callback","src","finished","cancelled","data","cleanup","parentNode","onLoad","complete","onError","addEventListener","removeEventListener","Inject","args","DOCUMENT","XSSI_PREFIX","JsonpInterceptor","XhrFactory","BrowserXhr","build","XMLHttpRequest","HttpXhrBackend","xhrFactory","open","setRequestHeader","detectedType","reqBody","headerResponse","partialFromXhr","response","responseText","parse","text","sentHeaders","onDownProgress","progressEvent","loaded","lengthComputable","total","partialText","onUpProgress","progress","upload","send","abort","XSRF_COOKIE_NAME","XSRF_HEADER_NAME","HttpXsrfTokenExtractor","HttpXsrfCookieExtractor","platform","cookieName","lastCookieString","lastToken","parseCount","getToken","cookieString","cookie","ɵparseCookieValue","PLATFORM_ID","HttpXsrfInterceptor","tokenService","headerName","lcUrl","startsWith","HttpClientXsrfModule","disable","ngModule","providers","provide","useClass","withOptions","useValue","NgModule","useExisting","multi","HttpClientModule","imports","useFactory","deps","Optional","GenericBrowserDomAdapter","_animationPrefix","_transitionEnd","element_1","getStyle","domPrefixes","transEndEventNames_1","WebkitTransition","MozTransition","OTransition","transition","getDistributedNodes","resolveAndSetHref","baseUrl","href","supportsDOMEvents","supportsNativeShadowDOM","createShadowRoot","getAnimationPrefix","getTransitionEnd","supportsAnimation","DomAdapter","resourceLoaderType","defineProperty","_attrToPropMap","enumerable","configurable","class","innerHtml","readonly","tabindex","_keyMap","\b","\t","","\u001b","Del","Esc","Left","Right","Up","Down","Menu","Scroll","Win","_chromeNumKeyPadMap","A","B","C","D","E","F","G","H","I","J","K","M","N","O","`","","compareDocumentPosition","blackListedMap","BrowserDomAdapter","templateHtml","makeCurrent","hasProperty","setProperty","getProperty","invoke","methodName","logError","console","logGroup","group","logGroupEnd","groupEnd","nodeA","nodeB","selector","querySelectorAll","on","evt","listener","onAndCancel","dispatchEvent","createMouseEvent","eventType","getDefaultDocument","createEvent","initEvent","isPrevented","defaultPrevented","innerHTML","isTemplateElement","content","outerHTML","nodeName","nodeValue","firstChild","nextSibling","parentElement","childNodes","clearNodes","replaceChild","newChild","oldChild","remove","insertBefore","parent","ref","insertAllBefore","nodes","insertAfter","getText","textContent","setText","getValue","setValue","getChecked","checked","setChecked","createComment","createTemplate","tagName","createElementNS","ns","createTextNode","createScriptTag","attrValue","createStyleElement","css","getShadowRoot","shadowRoot","getHost","host","cloneNode","getElementsByClassName","getElementsByTagName","classList","addClass","className","add","removeClass","hasClass","setStyle","styleName","styleValue","removeStyle","stylename","hasStyle","elAttrs","attributes","attrib","item","hasAttribute","attribute","hasAttributeNS","getAttributeNS","setAttributeNS","removeAttributeNS","templateAwareRoot","implementation","createHTMLDocument","getBoundingClientRect","top","bottom","left","right","width","height","getTitle","title","setTitle","newTitle","elementMatches","matches","msMatchesSelector","webkitMatchesSelector","isTextNode","nodeType","Node","TEXT_NODE","isCommentNode","COMMENT_NODE","ELEMENT_NODE","hasShadowRoot","HTMLElement","isShadowRoot","DocumentFragment","importIntoDoc","importNode","adoptNode","getHref","getEventKey","keyIdentifier","fromCharCode","parseInt","substring","location","getGlobalEventTarget","getHistory","getLocation","getBaseHref","resetBaseElement","getUserAgent","navigator","userAgent","setData","getData","getComputedStyle","supportsWebAnimation","performanceNow","performance","now","Date","getTime","supportsCookies","getCookie","setCookie","DOCUMENT$1","BrowserPlatformLocation","_doc","_init","_history","getBaseHrefFromDOM","onPopState","onHashChange","newPath","search","hash","state","replaceState","forward","back","PlatformLocation","BrowserGetTestability","Meta","_dom","addTag","tag","forceCreation","_getOrCreateElement","addTags","result","getTag","attrSelector","getTags","updateTag","_parseSelector","meta","_setMetaElementAttributes","removeTag","removeTagElement","elem","_containsAttributes","prop","attr","every","setTestabilityGetter","addToWindow","registry","findInAncestors","testability","findTestabilityInTree","getAllTestabilities","getAllRootElements","testabilities","count","didWork","decrement","didWork_","whenStable","getTestability","CORE_TOKENS","Title","ApplicationRef","NgZone","INSPECT_GLOBAL_NAME","CORE_TOKENS_GLOBAL_NAME","EVENT_MANAGER_PLUGINS","APP_INITIALIZER","NgProbeToken","EventManager","plugins","_zone","_eventNameToPlugin","manager","_plugins","reverse","eventName","_findPluginFor","addGlobalEventListener","getZone","plugin","plugin_1","supports","EventManagerPlugin","DomSharedStylesHost","_hostNodes","Set","_styleNodes","_addStylesToHost","styleEl","addHost","hostNode","_stylesSet","removeHost","onStylesAdded","additions","ngOnDestroy","styleNode","SharedStylesHost","addStyles","getAllStyles","NAMESPACE_URIS","svg","xhtml","xlink","xml","xmlns","DefaultDomRenderer2","DomRendererFactory2","eventManager","sharedStylesHost","rendererByCompId","defaultRenderer","createRenderer","encapsulation","ViewEncapsulation","Emulated","renderer","id","EmulatedEncapsulationDomRenderer2","applyToHost","Native","ShadowDomRenderer","begin","end","destroy","namespace","createText","refChild","selectRootElement","selectorOrNode","namespaceUri","flags","RendererStyleFlags2","DashCase","Important","removeProperty","listen","component","contentAttr","hostAttr","hostEl","nodeOrShadowRoot","__symbol__","Zone","ADD_EVENT_LISTENER","REMOVE_EVENT_LISTENER","symbolNames","blackListedEvents","isBlackListedEvent","globalListener","symbolName","taskDatas","taskData","zone","current","run","copiedTasks","EVENT_NAMES","DomEventsPlugin","ngZone","isInAngularZone","globalListenerRegistered","root","callbackRegistered","underlyingRemove","pan","panstart","panmove","panend","pancancel","panleft","panright","panup","pandown","pinch","pinchstart","pinchmove","pinchend","pinchcancel","pinchin","pinchout","press","pressup","rotate","rotatestart","rotatemove","rotateend","rotatecancel","swipe","swipeleft","swiperight","swipeup","swipedown","tap","HAMMER_GESTURE_CONFIG","HammerGestureConfig","events","overrides","buildHammer","mc","Hammer","enable","MODIFIER_KEYS","HammerGesturesPlugin","_config","isCustomEvent","runOutsideAngular","eventObj","runGuarded","off","MODIFIER_KEY_GETTERS","alt","altKey","control","ctrlKey","metaKey","shift","shiftKey","KeyEventsPlugin","parseEventName","parsedEvent","outsideHandler","eventCallback","parts","domEventName","_normalizeKey","pop","fullKey","modifierName","getEventFullKey","modifierGetter","keyName","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","buf","startElement","chars","endElement","lower","RegExp","DomSanitizer","SafeValueImpl","DomSanitizerImpl","sanitize","ctx","SecurityContext","NONE","HTML","SafeHtmlImpl","changingThisBreaksApplicationSecurity","checkNotSafeValue","STYLE","SafeStyleImpl","SCRIPT","SafeScriptImpl","URL","SafeResourceUrlImpl","SafeUrlImpl","RESOURCE_URL","expectedType","getTypeName","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","INTERNAL_BROWSER_PLATFORM_PROVIDERS","ɵPLATFORM_BROWSER_ID","PLATFORM_INITIALIZER","win","createPlatformFactory","platformCore","ChangeDetectionPerfRecord","msPerTick","numTicks","BlogUtils","AngularProfiler","appRef","injector","timeChangeDetection","config","record","isProfilerAvailable","profile","start","tick","toFixed","TransferState","store","onSerializeCallbacks","initState","transferState","defaultValue","hasKey","onSerialize","toJson","warn","Version","massageText","htmlString","isMobile","textElement","imgs","includes","as","GeoIpService","http$$1","http","pipe","publishReplay","refCount","DynamicImageComponent","align","sizemode","scale","ngOnInit","assetRatio","resolution","spacerStyle","timeoutFunc","setTimeout","getSize","mainSide","resize","getServingUrl","clearTimeout","nativeElement","children","clientWidth","clientHeight","servingSize","Math","round","max","wrapperRatio","min","ceil","devicePixelRatio","servingUrl","render","img","Image","onload","imgUrl","Component","template","ElementRef","propDecorators","Input","DynamicImageModule","CommonModule","declarations","SafeHtmlPipe","transform","Pipe","SwiperDirective","swiper","Swiper","Directive","ɵa"],"mappings":"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","file":"sebasdd-ngx-common.umd.min.js.map","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs/observable/of'), require('rxjs/operator/concatMap'), require('rxjs/operator/filter'), require('rxjs/operator/map'), require('@angular/common'), require('rxjs/Observable'), require('rxjs/operators')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/observable/of', 'rxjs/operator/concatMap', 'rxjs/operator/filter', 'rxjs/operator/map', '@angular/common', 'rxjs/Observable', 'rxjs/operators'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.sebasddNgxCommon = {}),global.ng.core,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.ng.common,global.Rx,global.Rx.Observable.prototype));\n}(this, (function (exports,core,of,concatMap,filter,map,common,Observable,operators) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.0.0\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * \\@stable\n * @abstract\n */\nvar HttpHandler = (function () {\n    function HttpHandler() {\n    }\n    return HttpHandler;\n}());\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * \\@stable\n * @abstract\n */\nvar HttpBackend = (function () {\n    function HttpBackend() {\n    }\n    return HttpBackend;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n/**\n * Immutable set of Http headers, with lazy parsing.\n * \\@stable\n */\nvar HttpHeaders = (function () {\n    function HttpHeaders(headers) {\n        var _this = this;\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                headers.split('\\n').forEach(function (line) {\n                    var /** @type {?} */ index = line.indexOf(':');\n                    if (index > 0) {\n                        var /** @type {?} */ name_1 = line.slice(0, index);\n                        var /** @type {?} */ key = name_1.toLowerCase();\n                        var /** @type {?} */ value = line.slice(index + 1).trim();\n                        _this.maybeSetNormalizedName(name_1, key);\n                        if (_this.headers.has(key)) {\n                            /** @type {?} */ ((_this.headers.get(key))).push(value);\n                        }\n                        else {\n                            _this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                Object.keys(headers).forEach(function (name) {\n                    var /** @type {?} */ values = headers[name];\n                    var /** @type {?} */ key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        _this.headers.set(key, values);\n                        _this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of header by given name.\n     */\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.has = /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    };\n    /**\n     * Returns first header that matches given name.\n     */\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.get = /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        this.init();\n        var /** @type {?} */ values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Returns the names of the headers\n     */\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    HttpHeaders.prototype.keys = /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    function () {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    };\n    /**\n     * Returns list of header values for a given name.\n     */\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.getAll = /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.append = /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (name, value) {\n        return this.clone({ name: name, value: value, op: 'a' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.set = /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (name, value) {\n        return this.clone({ name: name, value: value, op: 's' });\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.delete = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        return this.clone({ name: name, value: value, op: 'd' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    HttpHeaders.prototype.maybeSetNormalizedName = /**\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    function (name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    HttpHeaders.prototype.init = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(function (update) { return _this.applyUpdate(update); });\n                this.lazyUpdate = null;\n            }\n        }\n    };\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    HttpHeaders.prototype.copyFrom = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        var _this = this;\n        other.init();\n        Array.from(other.headers.keys()).forEach(function (key) {\n            _this.headers.set(key, /** @type {?} */ ((other.headers.get(key))));\n            _this.normalizedNames.set(key, /** @type {?} */ ((other.normalizedNames.get(key))));\n        });\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.clone = /**\n     * @param {?} update\n     * @return {?}\n     */\n    function (update) {\n        var /** @type {?} */ clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.applyUpdate = /**\n     * @param {?} update\n     * @return {?}\n     */\n    function (update) {\n        var /** @type {?} */ key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                var /** @type {?} */ value = /** @type {?} */ ((update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                var /** @type {?} */ base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push.apply(base, value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                var /** @type {?} */ toDelete_1 = /** @type {?} */ (update.value);\n                if (!toDelete_1) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    var /** @type {?} */ existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(function (value) { return toDelete_1.indexOf(value) === -1; });\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    HttpHeaders.prototype.forEach = /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var _this = this;\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(function (key) { return fn(/** @type {?} */ ((_this.normalizedNames.get(key))), /** @type {?} */ ((_this.headers.get(key)))); });\n    };\n    return HttpHeaders;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A codec for encoding and decoding parameters in URLs.\n *\n * Used by `HttpParams`.\n *\n * \\@stable\n *\n * @record\n */\n\n/**\n * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n * serialize and parse URL parameter keys and values.\n *\n * \\@stable\n */\nvar HttpUrlEncodingCodec = (function () {\n    function HttpUrlEncodingCodec() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeKey = /**\n     * @param {?} k\n     * @return {?}\n     */\n    function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeValue = /**\n     * @param {?} v\n     * @return {?}\n     */\n    function (v) { return standardEncoding(v); };\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeKey = /**\n     * @param {?} k\n     * @return {?}\n     */\n    function (k) { return decodeURIComponent(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeValue = /**\n     * @param {?} v\n     * @return {?}\n     */\n    function (v) { return decodeURIComponent(v); };\n    return HttpUrlEncodingCodec;\n}());\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    var /** @type {?} */ map$$1 = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map$$1.get(key) || [];\n            list.push(val);\n            map$$1.set(key, list);\n        });\n    }\n    return map$$1;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Options used to construct an `HttpParams` instance.\n * @record\n */\n\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable - all mutation operations return a new instance.\n *\n * \\@stable\n */\nvar HttpParams = (function () {\n    function HttpParams(options) {\n        if (options === void 0) { options = /** @type {?} */ ({}); }\n        var _this = this;\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(\"Cannot specify both fromString and fromObject.\");\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach(function (key) {\n                var /** @type {?} */ value = (/** @type {?} */ (options.fromObject))[key]; /** @type {?} */\n                ((_this.map)).set(key, Array.isArray(value) ? value : [value]);\n            });\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Check whether the body has one or more values for the given parameter name.\n     */\n    /**\n     * Check whether the body has one or more values for the given parameter name.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.has = /**\n     * Check whether the body has one or more values for the given parameter name.\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) {\n        this.init();\n        return /** @type {?} */ ((this.map)).has(param);\n    };\n    /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     */\n    /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.get = /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) {\n        this.init();\n        var /** @type {?} */ res = /** @type {?} */ ((this.map)).get(param);\n        return !!res ? res[0] : null;\n    };\n    /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     */\n    /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.getAll = /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) {\n        this.init();\n        return /** @type {?} */ ((this.map)).get(param) || null;\n    };\n    /**\n     * Get all the parameter names for this body.\n     */\n    /**\n     * Get all the parameter names for this body.\n     * @return {?}\n     */\n    HttpParams.prototype.keys = /**\n     * Get all the parameter names for this body.\n     * @return {?}\n     */\n    function () {\n        this.init();\n        return Array.from(/** @type {?} */ ((this.map)).keys());\n    };\n    /**\n     * Construct a new body with an appended value for the given parameter name.\n     */\n    /**\n     * Construct a new body with an appended value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.append = /**\n     * Construct a new body with an appended value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    function (param, value) { return this.clone({ param: param, value: value, op: 'a' }); };\n    /**\n     * Construct a new body with a new value for the given parameter name.\n     */\n    /**\n     * Construct a new body with a new value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.set = /**\n     * Construct a new body with a new value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    function (param, value) { return this.clone({ param: param, value: value, op: 's' }); };\n    /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     */\n    /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     * @param {?} param\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpParams.prototype.delete = /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     * @param {?} param\n     * @param {?=} value\n     * @return {?}\n     */\n    function (param, value) { return this.clone({ param: param, value: value, op: 'd' }); };\n    /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     */\n    /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    HttpParams.prototype.toString = /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.init();\n        return this.keys()\n            .map(function (key) {\n            var /** @type {?} */ eKey = _this.encoder.encodeKey(key);\n            return /** @type {?} */ ((/** @type {?} */ ((_this.map)).get(key))).map(function (value) { return eKey + '=' + _this.encoder.encodeValue(value); }).join('&');\n        })\n            .join('&');\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpParams.prototype.clone = /**\n     * @param {?} update\n     * @return {?}\n     */\n    function (update) {\n        var /** @type {?} */ clone = new HttpParams(/** @type {?} */ ({ encoder: this.encoder }));\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @return {?}\n     */\n    HttpParams.prototype.init = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(function (key) { return /** @type {?} */ ((_this.map)).set(key, /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((_this.cloneFrom)).map)).get(key)))); }); /** @type {?} */\n            ((this.updates)).forEach(function (update) {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        var /** @type {?} */ base = (update.op === 'a' ? /** @type {?} */ ((_this.map)).get(update.param) : undefined) || [];\n                        base.push(/** @type {?} */ ((update.value))); /** @type {?} */\n                        ((_this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            var /** @type {?} */ base_1 = /** @type {?} */ ((_this.map)).get(update.param) || [];\n                            var /** @type {?} */ idx = base_1.indexOf(update.value);\n                            if (idx !== -1) {\n                                base_1.splice(idx, 1);\n                            }\n                            if (base_1.length > 0) {\n                                /** @type {?} */ ((_this.map)).set(update.param, base_1);\n                            }\n                            else {\n                                /** @type {?} */ ((_this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            /** @type {?} */ ((_this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = null;\n        }\n    };\n    return HttpParams;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * \\@stable\n */\nvar HttpRequest = (function () {\n    function HttpRequest(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        var /** @type {?} */ options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = /** @type {?} */ (third) || null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = /** @type {?} */ (third);\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            var /** @type {?} */ params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                var /** @type {?} */ qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                var /** @type {?} */ sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     */\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    HttpRequest.prototype.serializeBody = /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    function () {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return (/** @type {?} */ (this.body)).toString();\n    };\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     */\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    HttpRequest.prototype.detectContentTypeHeader = /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    function () {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    };\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpRequest.prototype.clone = /**\n     * @param {?=} update\n     * @return {?}\n     */\n    function (update) {\n        if (update === void 0) { update = {}; }\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        var /** @type {?} */ method = update.method || this.method;\n        var /** @type {?} */ url = update.url || this.url;\n        var /** @type {?} */ responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        var /** @type {?} */ body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        var /** @type {?} */ withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        var /** @type {?} */ reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        var /** @type {?} */ headers = update.headers || this.headers;\n        var /** @type {?} */ params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce(function (headers, name) { return headers.set(name, /** @type {?} */ ((update.setHeaders))[name]); }, headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce(function (params, param) { return params.set(param, /** @type {?} */ ((update.setParams))[param]); }, params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params: params, headers: headers, reportProgress: reportProgress, responseType: responseType, withCredentials: withCredentials,\n        });\n    };\n    return HttpRequest;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar HttpEventType = {\n    /**\n       * The request was sent out over the wire.\n       */\n    Sent: 0,\n    /**\n       * An upload progress event was received.\n       */\n    UploadProgress: 1,\n    /**\n       * The response status code and headers were received.\n       */\n    ResponseHeader: 2,\n    /**\n       * A download progress event was received.\n       */\n    DownloadProgress: 3,\n    /**\n       * The full response including the body was received.\n       */\n    Response: 4,\n    /**\n       * A custom event from an interceptor or a backend.\n       */\n    User: 5,\n};\nHttpEventType[HttpEventType.Sent] = \"Sent\";\nHttpEventType[HttpEventType.UploadProgress] = \"UploadProgress\";\nHttpEventType[HttpEventType.ResponseHeader] = \"ResponseHeader\";\nHttpEventType[HttpEventType.DownloadProgress] = \"DownloadProgress\";\nHttpEventType[HttpEventType.Response] = \"Response\";\nHttpEventType[HttpEventType.User] = \"User\";\n/**\n * Base interface for progress events.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A download progress event.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An upload progress event.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An event indicating that the request was sent to the server. Useful\n * when a request may be retried multiple times, to distinguish between\n * retries on the final event stream.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A user-defined event.\n *\n * Grouping all custom events under this type ensures they will be handled\n * and forwarded by all implementations of interceptors.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An error that represents a failed attempt to JSON.parse text coming back\n * from the server.\n *\n * It bundles the Error object with the actual response body that failed to parse.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * \\@stable\n * @abstract\n */\nvar HttpResponseBase = (function () {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     */\n    function HttpResponseBase(init, defaultStatus, defaultStatusText) {\n        if (defaultStatus === void 0) { defaultStatus = 200; }\n        if (defaultStatusText === void 0) { defaultStatusText = 'OK'; }\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n    return HttpResponseBase;\n}());\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * \\@stable\n */\nvar HttpHeaderResponse = (function (_super) {\n    __extends(HttpHeaderResponse, _super);\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     */\n    function HttpHeaderResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.ResponseHeader;\n        return _this;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     */\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpHeaderResponse.prototype.clone = /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    function (update) {\n        if (update === void 0) { update = {}; }\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpHeaderResponse;\n}(HttpResponseBase));\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * \\@stable\n */\nvar HttpResponse = (function (_super) {\n    __extends(HttpResponse, _super);\n    /**\n     * Construct a new `HttpResponse`.\n     */\n    function HttpResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.Response;\n        _this.body = init.body || null;\n        return _this;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpResponse.prototype.clone = /**\n     * @param {?=} update\n     * @return {?}\n     */\n    function (update) {\n        if (update === void 0) { update = {}; }\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpResponse;\n}(HttpResponseBase));\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * \\@stable\n */\nvar HttpErrorResponse = (function (_super) {\n    __extends(HttpErrorResponse, _super);\n    function HttpErrorResponse(init) {\n        var _this = \n        // Initialize with a default status of 0 / Unknown Error.\n        _super.call(this, init, 0, 'Unknown Error') || this;\n        _this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        _this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (_this.status >= 200 && _this.status < 300) {\n            _this.message = \"Http failure during parsing for \" + (init.url || '(unknown url)');\n        }\n        else {\n            _this.message =\n                \"Http failure response for \" + (init.url || '(unknown url)') + \": \" + init.status + \" \" + init.statusText;\n        }\n        _this.error = init.error || null;\n        return _this;\n    }\n    return HttpErrorResponse;\n}(HttpResponseBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. Basically, this clones the object and adds the body.\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body: body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Perform HTTP requests.\n *\n * `HttpClient` is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies according to which\n * signature is called (mainly the values of `observe` and `responseType`).\n *\n * \\@stable\n */\nvar HttpClient = (function () {\n    function HttpClient(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     */\n    /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.request = /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (first, url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var /** @type {?} */ req;\n        // Firstly, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = /** @type {?} */ (first);\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming GET unless a method is\n            // provided.\n            // Figure out the headers.\n            var /** @type {?} */ headers = undefined;\n            if (!!options.headers !== undefined) {\n                if (options.headers instanceof HttpHeaders) {\n                    headers = options.headers;\n                }\n                else {\n                    headers = new HttpHeaders(options.headers);\n                }\n            }\n            // Sort out parameters.\n            var /** @type {?} */ params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams(/** @type {?} */ ({ fromObject: options.params }));\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, /** @type {?} */ ((url)), options.body || null, {\n                headers: headers,\n                params: params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        var /** @type {?} */ events$ = concatMap.concatMap.call(of.of(req), function (req) { return _this.handler.handle(req); });\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        var /** @type {?} */ res$ = filter.filter.call(events$, function (event) { return event instanceof HttpResponse; });\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return map.map.call(res$, function (res) {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        });\n                    case 'blob':\n                        return map.map.call(res$, function (res) {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        });\n                    case 'text':\n                        return map.map.call(res$, function (res) {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        });\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return map.map.call(res$, function (res) { return res.body; });\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(\"Unreachable: unhandled observe type \" + options.observe + \"}\");\n        }\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.delete = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('DELETE', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.get = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('GET', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.head = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('HEAD', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     * @template T\n     * @param {?} url\n     * @param {?} callbackParam\n     * @return {?}\n     */\n    HttpClient.prototype.jsonp = /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     * @template T\n     * @param {?} url\n     * @param {?} callbackParam\n     * @return {?}\n     */\n    function (url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.options = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('OPTIONS', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.patch = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PATCH', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.post = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('POST', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.put = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PUT', url, addBody(options, body));\n    };\n    HttpClient.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    HttpClient.ctorParameters = function () { return [\n        { type: HttpHandler, },\n    ]; };\n    return HttpClient;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Intercepts `HttpRequest` and handles them.\n *\n * Most interceptors will transform the outgoing request before passing it to the\n * next interceptor in the chain, by calling `next.handle(transformedReq)`.\n *\n * In rare cases, interceptors may wish to completely handle a request themselves,\n * and not delegate to the remainder of the chain. This behavior is allowed.\n *\n * \\@stable\n * @record\n */\n\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n * \\@stable\n */\nvar HttpInterceptorHandler = (function () {\n    function HttpInterceptorHandler(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    HttpInterceptorHandler.prototype.handle = /**\n     * @param {?} req\n     * @return {?}\n     */\n    function (req) {\n        return this.interceptor.intercept(req, this.next);\n    };\n    return HttpInterceptorHandler;\n}());\n/**\n * A multi-provider token which represents the array of `HttpInterceptor`s that\n * are registered.\n *\n * \\@stable\n */\nvar HTTP_INTERCEPTORS = new core.InjectionToken('HTTP_INTERCEPTORS');\nvar NoopInterceptor = (function () {\n    function NoopInterceptor() {\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    NoopInterceptor.prototype.intercept = /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    function (req, next) {\n        return next.handle(req);\n    };\n    NoopInterceptor.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    NoopInterceptor.ctorParameters = function () { return []; };\n    return NoopInterceptor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nvar nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nvar JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n * \\@stable\n * @abstract\n */\nvar JsonpCallbackContext = (function () {\n    function JsonpCallbackContext() {\n    }\n    return JsonpCallbackContext;\n}());\n/**\n * `HttpBackend` that only processes `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n *\n * \\@stable\n */\nvar JsonpClientBackend = (function () {\n    function JsonpClientBackend(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.nextCallback = /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @return {?}\n     */\n    function () { return \"ng_jsonp_callback_\" + nextRequestId++; };\n    /**\n     * Process a JSONP request and return an event stream of the results.\n     */\n    /**\n     * Process a JSONP request and return an event stream of the results.\n     * @param {?} req\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.handle = /**\n     * Process a JSONP request and return an event stream of the results.\n     * @param {?} req\n     * @return {?}\n     */\n    function (req) {\n        var _this = this;\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable.Observable(function (observer) {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            var /** @type {?} */ callback = _this.nextCallback();\n            var /** @type {?} */ url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, \"=\" + callback + \"$1\");\n            // Construct the <script> tag and point it at the URL.\n            var /** @type {?} */ node = _this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            var /** @type {?} */ body = null;\n            // Whether the response callback has been called.\n            var /** @type {?} */ finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            var /** @type {?} */ cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            _this.callbackMap[callback] = function (data) {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete _this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            var /** @type {?} */ cleanup = function () {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete _this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            var /** @type {?} */ onLoad = function (event) {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url: url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body: body,\n                    status: 200,\n                    statusText: 'OK', url: url,\n                }));\n                // Complete the stream, the resposne is over.\n                observer.complete();\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            var /** @type {?} */ onError = function (error) {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error: error,\n                    status: 0,\n                    statusText: 'JSONP Error', url: url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            _this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return function () {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    };\n    JsonpClientBackend.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    JsonpClientBackend.ctorParameters = function () { return [\n        { type: JsonpCallbackContext, },\n        { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] },] },\n    ]; };\n    return JsonpClientBackend;\n}());\n/**\n * An `HttpInterceptor` which identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * \\@stable\n */\nvar JsonpInterceptor = (function () {\n    function JsonpInterceptor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    JsonpInterceptor.prototype.intercept = /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    function (req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(/** @type {?} */ (req));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    };\n    JsonpInterceptor.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    JsonpInterceptor.ctorParameters = function () { return [\n        { type: JsonpClientBackend, },\n    ]; };\n    return JsonpInterceptor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * \\@stable\n * @abstract\n */\nvar XhrFactory = (function () {\n    function XhrFactory() {\n    }\n    return XhrFactory;\n}());\n/**\n * A factory for \\@{link HttpXhrBackend} that uses the `XMLHttpRequest` browser API.\n *\n * \\@stable\n */\nvar BrowserXhr = (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((new XMLHttpRequest())); };\n    BrowserXhr.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    BrowserXhr.ctorParameters = function () { return []; };\n    return BrowserXhr;\n}());\n/**\n * An `HttpBackend` which uses the XMLHttpRequest API to send\n * requests to a backend server.\n *\n * \\@stable\n */\nvar HttpXhrBackend = (function () {\n    function HttpXhrBackend(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Process a request and return a stream of response events.\n     */\n    /**\n     * Process a request and return a stream of response events.\n     * @param {?} req\n     * @return {?}\n     */\n    HttpXhrBackend.prototype.handle = /**\n     * Process a request and return a stream of response events.\n     * @param {?} req\n     * @return {?}\n     */\n    function (req) {\n        var _this = this;\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(\"Attempted to construct Jsonp request without JsonpClientModule installed.\");\n        }\n        // Everything happens on Observable subscription.\n        return new Observable.Observable(function (observer) {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            var /** @type {?} */ xhr = _this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach(function (name, values) { return xhr.setRequestHeader(name, values.join(',')); });\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                var /** @type {?} */ detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                var /** @type {?} */ responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = /** @type {?} */ (((responseType !== 'json') ? responseType : 'text'));\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            var /** @type {?} */ reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            var /** @type {?} */ headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            var /** @type {?} */ partialFromXhr = function () {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                var /** @type {?} */ status = xhr.status === 1223 ? 204 : xhr.status;\n                var /** @type {?} */ statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                var /** @type {?} */ headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                var /** @type {?} */ url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers: headers, status: status, statusText: statusText, url: url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            var /** @type {?} */ onLoad = function () {\n                // Read response state from the memoized partial data.\n                var _a = partialFromXhr(), headers = _a.headers, status = _a.status, statusText = _a.statusText, url = _a.url;\n                // The body will be read out if present.\n                var /** @type {?} */ body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                var /** @type {?} */ ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (ok && req.responseType === 'json' && typeof body === 'string') {\n                    // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        body = JSON.parse(body);\n                    }\n                    catch (/** @type {?} */ error) {\n                        // Even though the response status was 2xx, this is still an error.\n                        ok = false;\n                        // The parse error contains the text of the body that failed to parse.\n                        body = /** @type {?} */ ({ error: error, text: body });\n                    }\n                }\n                else if (!ok && req.responseType === 'json' && typeof body === 'string') {\n                    try {\n                        // Attempt to parse the body as JSON.\n                        body = JSON.parse(body);\n                    }\n                    catch (/** @type {?} */ error) {\n                        // Cannot be certain that the body was meant to be parsed as JSON.\n                        // Leave the body as a string.\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            var /** @type {?} */ onError = function (error) {\n                var /** @type {?} */ res = new HttpErrorResponse({\n                    error: error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            var /** @type {?} */ sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onDownProgress = function (event) {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                var /** @type {?} */ progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onUpProgress = function (event) {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                var /** @type {?} */ progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return function () {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            };\n        });\n    };\n    HttpXhrBackend.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    HttpXhrBackend.ctorParameters = function () { return [\n        { type: XhrFactory, },\n    ]; };\n    return HttpXhrBackend;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSRF_COOKIE_NAME = new core.InjectionToken('XSRF_COOKIE_NAME');\nvar XSRF_HEADER_NAME = new core.InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * \\@stable\n * @abstract\n */\nvar HttpXsrfTokenExtractor = (function () {\n    function HttpXsrfTokenExtractor() {\n    }\n    return HttpXsrfTokenExtractor;\n}());\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nvar HttpXsrfCookieExtractor = (function () {\n    function HttpXsrfCookieExtractor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    HttpXsrfCookieExtractor.prototype.getToken = /**\n     * @return {?}\n     */\n    function () {\n        if (this.platform === 'server') {\n            return null;\n        }\n        var /** @type {?} */ cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = common.ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    };\n    HttpXsrfCookieExtractor.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    HttpXsrfCookieExtractor.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] },] },\n        { type: undefined, decorators: [{ type: core.Inject, args: [core.PLATFORM_ID,] },] },\n        { type: undefined, decorators: [{ type: core.Inject, args: [XSRF_COOKIE_NAME,] },] },\n    ]; };\n    return HttpXsrfCookieExtractor;\n}());\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nvar HttpXsrfInterceptor = (function () {\n    function HttpXsrfInterceptor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    HttpXsrfInterceptor.prototype.intercept = /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    function (req, next) {\n        var /** @type {?} */ lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        var /** @type {?} */ token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    };\n    HttpXsrfInterceptor.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    HttpXsrfInterceptor.ctorParameters = function () { return [\n        { type: HttpXsrfTokenExtractor, },\n        { type: undefined, decorators: [{ type: core.Inject, args: [XSRF_HEADER_NAME,] },] },\n    ]; };\n    return HttpXsrfInterceptor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an `HttpHandler` that applies a bunch of `HttpInterceptor`s\n * to a request before passing it to the given `HttpBackend`.\n *\n * Meant to be used as a factory function within `HttpClientModule`.\n *\n * \\@stable\n * @param {?} backend\n * @param {?=} interceptors\n * @return {?}\n */\nfunction interceptingHandler(backend, interceptors) {\n    if (interceptors === void 0) { interceptors = []; }\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight(function (next, interceptor) { return new HttpInterceptorHandler(next, interceptor); }, backend);\n}\n/**\n * `NgModule` which adds XSRF protection support to outgoing requests.\n *\n * Provided the server supports a cookie-based XSRF protection system, this\n * module can be used directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no such names are provided, the default is to use `X-XSRF-TOKEN` for\n * the header name and `XSRF-TOKEN` for the cookie name.\n *\n * \\@stable\n */\nvar HttpClientXsrfModule = (function () {\n    function HttpClientXsrfModule() {\n    }\n    /**\n     * Disable the default XSRF protection.\n     */\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    HttpClientXsrfModule.disable = /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    function () {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    };\n    /**\n     * Configure XSRF protection to use the given cookie name or header name,\n     * or the default names (as described above) if not provided.\n     */\n    /**\n     * Configure XSRF protection to use the given cookie name or header name,\n     * or the default names (as described above) if not provided.\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClientXsrfModule.withOptions = /**\n     * Configure XSRF protection to use the given cookie name or header name,\n     * or the default names (as described above) if not provided.\n     * @param {?=} options\n     * @return {?}\n     */\n    function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    };\n    HttpClientXsrfModule.decorators = [\n        { type: core.NgModule, args: [{\n                    providers: [\n                        HttpXsrfInterceptor,\n                        { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                        { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                        { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                        { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                    ],\n                },] },\n    ];\n    /** @nocollapse */\n    HttpClientXsrfModule.ctorParameters = function () { return []; };\n    return HttpClientXsrfModule;\n}());\n/**\n * `NgModule` which provides the `HttpClient` and associated services.\n *\n * Interceptors can be added to the chain behind `HttpClient` by binding them\n * to the multiprovider for `HTTP_INTERCEPTORS`.\n *\n * \\@stable\n */\nvar HttpClientModule = (function () {\n    function HttpClientModule() {\n    }\n    HttpClientModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [\n                        HttpClientXsrfModule.withOptions({\n                            cookieName: 'XSRF-TOKEN',\n                            headerName: 'X-XSRF-TOKEN',\n                        }),\n                    ],\n                    providers: [\n                        HttpClient,\n                        // HttpHandler is the backend + interceptors and is constructed\n                        // using the interceptingHandler factory function.\n                        {\n                            provide: HttpHandler,\n                            useFactory: interceptingHandler,\n                            deps: [HttpBackend, [new core.Optional(), new core.Inject(HTTP_INTERCEPTORS)]],\n                        },\n                        HttpXhrBackend,\n                        { provide: HttpBackend, useExisting: HttpXhrBackend },\n                        BrowserXhr,\n                        { provide: XhrFactory, useExisting: BrowserXhr },\n                    ],\n                },] },\n    ];\n    /** @nocollapse */\n    HttpClientModule.ctorParameters = function () { return []; };\n    return HttpClientModule;\n}());\n\n/**\n * @license Angular v5.0.0\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _DOM = /** @type {?} */ ((null));\n/**\n * @return {?}\n */\nfunction getDOM() {\n    return _DOM;\n}\n/**\n * @param {?} adapter\n * @return {?}\n */\n\n/**\n * @param {?} adapter\n * @return {?}\n */\nfunction setRootDomAdapter(adapter) {\n    if (!_DOM) {\n        _DOM = adapter;\n    }\n}\n/**\n * Provides DOM operations in an environment-agnostic way.\n *\n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n * @abstract\n */\nvar DomAdapter = (function () {\n    function DomAdapter() {\n        this.resourceLoaderType = /** @type {?} */ ((null));\n    }\n    Object.defineProperty(DomAdapter.prototype, \"attrToPropMap\", {\n        /**\n         * Maps attribute names to their corresponding property names for cases\n         * where attribute name doesn't match property name.\n         */\n        get: /**\n         * Maps attribute names to their corresponding property names for cases\n         * where attribute name doesn't match property name.\n         * @return {?}\n         */\n        function () { return this._attrToPropMap; },\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) { this._attrToPropMap = value; },\n        enumerable: true,\n        configurable: true\n    });\n    return DomAdapter;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides DOM operations in any browser environment.\n *\n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n * @abstract\n */\nvar GenericBrowserDomAdapter = (function (_super) {\n    __extends(GenericBrowserDomAdapter, _super);\n    function GenericBrowserDomAdapter() {\n        var _this = _super.call(this) || this;\n        _this._animationPrefix = null;\n        _this._transitionEnd = null;\n        try {\n            var /** @type {?} */ element_1 = _this.createElement('div', document);\n            if (_this.getStyle(element_1, 'animationName') != null) {\n                _this._animationPrefix = '';\n            }\n            else {\n                var /** @type {?} */ domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];\n                for (var /** @type {?} */ i = 0; i < domPrefixes.length; i++) {\n                    if (_this.getStyle(element_1, domPrefixes[i] + 'AnimationName') != null) {\n                        _this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';\n                        break;\n                    }\n                }\n            }\n            var /** @type {?} */ transEndEventNames_1 = {\n                WebkitTransition: 'webkitTransitionEnd',\n                MozTransition: 'transitionend',\n                OTransition: 'oTransitionEnd otransitionend',\n                transition: 'transitionend'\n            };\n            Object.keys(transEndEventNames_1).forEach(function (key) {\n                if (_this.getStyle(element_1, key) != null) {\n                    _this._transitionEnd = transEndEventNames_1[key];\n                }\n            });\n        }\n        catch (/** @type {?} */ e) {\n            _this._animationPrefix = null;\n            _this._transitionEnd = null;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    GenericBrowserDomAdapter.prototype.getDistributedNodes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) { return (/** @type {?} */ (el)).getDistributedNodes(); };\n    /**\n     * @param {?} el\n     * @param {?} baseUrl\n     * @param {?} href\n     * @return {?}\n     */\n    GenericBrowserDomAdapter.prototype.resolveAndSetHref = /**\n     * @param {?} el\n     * @param {?} baseUrl\n     * @param {?} href\n     * @return {?}\n     */\n    function (el, baseUrl, href) {\n        el.href = href == null ? baseUrl : baseUrl + '/../' + href;\n    };\n    /**\n     * @return {?}\n     */\n    GenericBrowserDomAdapter.prototype.supportsDOMEvents = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @return {?}\n     */\n    GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = /**\n     * @return {?}\n     */\n    function () {\n        return typeof (/** @type {?} */ (document.body)).createShadowRoot === 'function';\n    };\n    /**\n     * @return {?}\n     */\n    GenericBrowserDomAdapter.prototype.getAnimationPrefix = /**\n     * @return {?}\n     */\n    function () { return this._animationPrefix ? this._animationPrefix : ''; };\n    /**\n     * @return {?}\n     */\n    GenericBrowserDomAdapter.prototype.getTransitionEnd = /**\n     * @return {?}\n     */\n    function () { return this._transitionEnd ? this._transitionEnd : ''; };\n    /**\n     * @return {?}\n     */\n    GenericBrowserDomAdapter.prototype.supportsAnimation = /**\n     * @return {?}\n     */\n    function () {\n        return this._animationPrefix != null && this._transitionEnd != null;\n    };\n    return GenericBrowserDomAdapter;\n}(DomAdapter));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _attrToPropMap = {\n    'class': 'className',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DOM_KEY_LOCATION_NUMPAD = 3;\n// Map to convert some key or keyIdentifier values to what will be returned by getEventKey\nvar _keyMap = {\n    // The following values are here for cross-browser compatibility and to match the W3C standard\n    // cf http://www.w3.org/TR/DOM-Level-3-Events-key/\n    '\\b': 'Backspace',\n    '\\t': 'Tab',\n    '\\x7F': 'Delete',\n    '\\x1B': 'Escape',\n    'Del': 'Delete',\n    'Esc': 'Escape',\n    'Left': 'ArrowLeft',\n    'Right': 'ArrowRight',\n    'Up': 'ArrowUp',\n    'Down': 'ArrowDown',\n    'Menu': 'ContextMenu',\n    'Scroll': 'ScrollLock',\n    'Win': 'OS'\n};\n// There is a bug in Chrome for numeric keypad keys:\n// https://code.google.com/p/chromium/issues/detail?id=155654\n// 1, 2, 3 ... are reported as A, B, C ...\nvar _chromeNumKeyPadMap = {\n    'A': '1',\n    'B': '2',\n    'C': '3',\n    'D': '4',\n    'E': '5',\n    'F': '6',\n    'G': '7',\n    'H': '8',\n    'I': '9',\n    'J': '*',\n    'K': '+',\n    'M': '-',\n    'N': '.',\n    'O': '/',\n    '\\x60': '0',\n    '\\x90': 'NumLock'\n};\nvar nodeContains;\nif (core.ɵglobal['Node']) {\n    nodeContains = core.ɵglobal['Node'].prototype.contains || function (node) {\n        return !!(this.compareDocumentPosition(node) & 16);\n    };\n}\n/**\n * A `DomAdapter` powered by full browser DOM APIs.\n *\n * \\@security Tread carefully! Interacting with the DOM directly is dangerous and\n * can introduce XSS risks.\n */\nvar BrowserDomAdapter = (function (_super) {\n    __extends(BrowserDomAdapter, _super);\n    function BrowserDomAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} templateHtml\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.parse = /**\n     * @param {?} templateHtml\n     * @return {?}\n     */\n    function (templateHtml) { throw new Error('parse not implemented'); };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.makeCurrent = /**\n     * @return {?}\n     */\n    function () { setRootDomAdapter(new BrowserDomAdapter()); };\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.hasProperty = /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    function (element, name) { return name in element; };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) { (/** @type {?} */ (el))[name] = value; };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) { return (/** @type {?} */ (el))[name]; };\n    /**\n     * @param {?} el\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.invoke = /**\n     * @param {?} el\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (el, methodName, args) {\n        (_a = (/** @type {?} */ (el)))[methodName].apply(_a, args);\n        var _a;\n    };\n    // TODO(tbosch): move this into a separate environment class once we have it\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.logError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (window.console) {\n            if (console.error) {\n                console.error(error);\n            }\n            else {\n                console.log(error);\n            }\n        }\n    };\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.log = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (window.console) {\n            window.console.log && window.console.log(error);\n        }\n    };\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.logGroup = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (window.console) {\n            window.console.group && window.console.group(error);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.logGroupEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (window.console) {\n            window.console.groupEnd && window.console.groupEnd();\n        }\n    };\n    Object.defineProperty(BrowserDomAdapter.prototype, \"attrToPropMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return _attrToPropMap; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} nodeA\n     * @param {?} nodeB\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.contains = /**\n     * @param {?} nodeA\n     * @param {?} nodeB\n     * @return {?}\n     */\n    function (nodeA, nodeB) { return nodeContains.call(nodeA, nodeB); };\n    /**\n     * @param {?} el\n     * @param {?} selector\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.querySelector = /**\n     * @param {?} el\n     * @param {?} selector\n     * @return {?}\n     */\n    function (el, selector) { return el.querySelector(selector); };\n    /**\n     * @param {?} el\n     * @param {?} selector\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.querySelectorAll = /**\n     * @param {?} el\n     * @param {?} selector\n     * @return {?}\n     */\n    function (el, selector) { return el.querySelectorAll(selector); };\n    /**\n     * @param {?} el\n     * @param {?} evt\n     * @param {?} listener\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.on = /**\n     * @param {?} el\n     * @param {?} evt\n     * @param {?} listener\n     * @return {?}\n     */\n    function (el, evt, listener) { el.addEventListener(evt, listener, false); };\n    /**\n     * @param {?} el\n     * @param {?} evt\n     * @param {?} listener\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.onAndCancel = /**\n     * @param {?} el\n     * @param {?} evt\n     * @param {?} listener\n     * @return {?}\n     */\n    function (el, evt, listener) {\n        el.addEventListener(evt, listener, false);\n        // Needed to follow Dart's subscription semantic, until fix of\n        // https://code.google.com/p/dart/issues/detail?id=17406\n        return function () { el.removeEventListener(evt, listener, false); };\n    };\n    /**\n     * @param {?} el\n     * @param {?} evt\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.dispatchEvent = /**\n     * @param {?} el\n     * @param {?} evt\n     * @return {?}\n     */\n    function (el, evt) { el.dispatchEvent(evt); };\n    /**\n     * @param {?} eventType\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createMouseEvent = /**\n     * @param {?} eventType\n     * @return {?}\n     */\n    function (eventType) {\n        var /** @type {?} */ evt = this.getDefaultDocument().createEvent('MouseEvent');\n        evt.initEvent(eventType, true, true);\n        return evt;\n    };\n    /**\n     * @param {?} eventType\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createEvent = /**\n     * @param {?} eventType\n     * @return {?}\n     */\n    function (eventType) {\n        var /** @type {?} */ evt = this.getDefaultDocument().createEvent('Event');\n        evt.initEvent(eventType, true, true);\n        return evt;\n    };\n    /**\n     * @param {?} evt\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.preventDefault = /**\n     * @param {?} evt\n     * @return {?}\n     */\n    function (evt) {\n        evt.preventDefault();\n        evt.returnValue = false;\n    };\n    /**\n     * @param {?} evt\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.isPrevented = /**\n     * @param {?} evt\n     * @return {?}\n     */\n    function (evt) {\n        return evt.defaultPrevented || evt.returnValue != null && !evt.returnValue;\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getInnerHTML = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) { return el.innerHTML; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getTemplateContent = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        return 'content' in el && this.isTemplateElement(el) ? (/** @type {?} */ (el)).content : null;\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getOuterHTML = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) { return el.outerHTML; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.nodeName = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return node.nodeName; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.nodeValue = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return node.nodeValue; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.type = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return node.type; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.content = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this.hasProperty(node, 'content')) {\n            return (/** @type {?} */ (node)).content;\n        }\n        else {\n            return node;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.firstChild = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) { return el.firstChild; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.nextSibling = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) { return el.nextSibling; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.parentElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) { return el.parentNode; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.childNodes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) { return el.childNodes; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.childNodesAsList = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ childNodes = el.childNodes;\n        var /** @type {?} */ res = new Array(childNodes.length);\n        for (var /** @type {?} */ i = 0; i < childNodes.length; i++) {\n            res[i] = childNodes[i];\n        }\n        return res;\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.clearNodes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        while (el.firstChild) {\n            el.removeChild(el.firstChild);\n        }\n    };\n    /**\n     * @param {?} el\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.appendChild = /**\n     * @param {?} el\n     * @param {?} node\n     * @return {?}\n     */\n    function (el, node) { el.appendChild(node); };\n    /**\n     * @param {?} el\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.removeChild = /**\n     * @param {?} el\n     * @param {?} node\n     * @return {?}\n     */\n    function (el, node) { el.removeChild(node); };\n    /**\n     * @param {?} el\n     * @param {?} newChild\n     * @param {?} oldChild\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.replaceChild = /**\n     * @param {?} el\n     * @param {?} newChild\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (el, newChild, oldChild) { el.replaceChild(newChild, oldChild); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.remove = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (node.parentNode) {\n            node.parentNode.removeChild(node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, ref, node) { parent.insertBefore(node, ref); };\n    /**\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} nodes\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.insertAllBefore = /**\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parent, ref, nodes) {\n        nodes.forEach(function (n) { return parent.insertBefore(n, ref); });\n    };\n    /**\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.insertAfter = /**\n     * @param {?} parent\n     * @param {?} ref\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, ref, node) { parent.insertBefore(node, ref.nextSibling); };\n    /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setInnerHTML = /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, value) { el.innerHTML = value; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getText = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) { return el.textContent; };\n    /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setText = /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, value) { el.textContent = value; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getValue = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) { return el.value; };\n    /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setValue = /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, value) { el.value = value; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getChecked = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) { return el.checked; };\n    /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setChecked = /**\n     * @param {?} el\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, value) { el.checked = value; };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createComment = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return this.getDefaultDocument().createComment(text); };\n    /**\n     * @param {?} html\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createTemplate = /**\n     * @param {?} html\n     * @return {?}\n     */\n    function (html) {\n        var /** @type {?} */ t = this.getDefaultDocument().createElement('template');\n        t.innerHTML = html;\n        return t;\n    };\n    /**\n     * @param {?} tagName\n     * @param {?=} doc\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createElement = /**\n     * @param {?} tagName\n     * @param {?=} doc\n     * @return {?}\n     */\n    function (tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElement(tagName);\n    };\n    /**\n     * @param {?} ns\n     * @param {?} tagName\n     * @param {?=} doc\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createElementNS = /**\n     * @param {?} ns\n     * @param {?} tagName\n     * @param {?=} doc\n     * @return {?}\n     */\n    function (ns, tagName, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createElementNS(ns, tagName);\n    };\n    /**\n     * @param {?} text\n     * @param {?=} doc\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createTextNode = /**\n     * @param {?} text\n     * @param {?=} doc\n     * @return {?}\n     */\n    function (text, doc) {\n        doc = doc || this.getDefaultDocument();\n        return doc.createTextNode(text);\n    };\n    /**\n     * @param {?} attrName\n     * @param {?} attrValue\n     * @param {?=} doc\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createScriptTag = /**\n     * @param {?} attrName\n     * @param {?} attrValue\n     * @param {?=} doc\n     * @return {?}\n     */\n    function (attrName, attrValue, doc) {\n        doc = doc || this.getDefaultDocument();\n        var /** @type {?} */ el = /** @type {?} */ (doc.createElement('SCRIPT'));\n        el.setAttribute(attrName, attrValue);\n        return el;\n    };\n    /**\n     * @param {?} css\n     * @param {?=} doc\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createStyleElement = /**\n     * @param {?} css\n     * @param {?=} doc\n     * @return {?}\n     */\n    function (css, doc) {\n        doc = doc || this.getDefaultDocument();\n        var /** @type {?} */ style = /** @type {?} */ (doc.createElement('style'));\n        this.appendChild(style, this.createTextNode(css, doc));\n        return style;\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createShadowRoot = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) { return (/** @type {?} */ (el)).createShadowRoot(); };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getShadowRoot = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) { return (/** @type {?} */ (el)).shadowRoot; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getHost = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) { return (/** @type {?} */ (el)).host; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.clone = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return node.cloneNode(true); };\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getElementsByClassName = /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    function (element, name) {\n        return element.getElementsByClassName(name);\n    };\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getElementsByTagName = /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    function (element, name) {\n        return element.getElementsByTagName(name);\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.classList = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) { return Array.prototype.slice.call(element.classList, 0); };\n    /**\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.addClass = /**\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n    function (element, className) { element.classList.add(className); };\n    /**\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.removeClass = /**\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n    function (element, className) { element.classList.remove(className); };\n    /**\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.hasClass = /**\n     * @param {?} element\n     * @param {?} className\n     * @return {?}\n     */\n    function (element, className) {\n        return element.classList.contains(className);\n    };\n    /**\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setStyle = /**\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (element, styleName, styleValue) {\n        element.style[styleName] = styleValue;\n    };\n    /**\n     * @param {?} element\n     * @param {?} stylename\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.removeStyle = /**\n     * @param {?} element\n     * @param {?} stylename\n     * @return {?}\n     */\n    function (element, stylename) {\n        // IE requires '' instead of null\n        // see https://github.com/angular/angular/issues/7916\n        element.style[stylename] = '';\n    };\n    /**\n     * @param {?} element\n     * @param {?} stylename\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getStyle = /**\n     * @param {?} element\n     * @param {?} stylename\n     * @return {?}\n     */\n    function (element, stylename) { return element.style[stylename]; };\n    /**\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?=} styleValue\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.hasStyle = /**\n     * @param {?} element\n     * @param {?} styleName\n     * @param {?=} styleValue\n     * @return {?}\n     */\n    function (element, styleName, styleValue) {\n        var /** @type {?} */ value = this.getStyle(element, styleName) || '';\n        return styleValue ? value == styleValue : value.length > 0;\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.tagName = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) { return element.tagName; };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.attributeMap = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ res = new Map();\n        var /** @type {?} */ elAttrs = element.attributes;\n        for (var /** @type {?} */ i = 0; i < elAttrs.length; i++) {\n            var /** @type {?} */ attrib = elAttrs.item(i);\n            res.set(attrib.name, attrib.value);\n        }\n        return res;\n    };\n    /**\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.hasAttribute = /**\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    function (element, attribute) {\n        return element.hasAttribute(attribute);\n    };\n    /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} attribute\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.hasAttributeNS = /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} attribute\n     * @return {?}\n     */\n    function (element, ns, attribute) {\n        return element.hasAttributeNS(ns, attribute);\n    };\n    /**\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getAttribute = /**\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    function (element, attribute) {\n        return element.getAttribute(attribute);\n    };\n    /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} name\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getAttributeNS = /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} name\n     * @return {?}\n     */\n    function (element, ns, name) {\n        return element.getAttributeNS(ns, name);\n    };\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setAttribute = /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (element, name, value) { element.setAttribute(name, value); };\n    /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setAttributeNS = /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (element, ns, name, value) {\n        element.setAttributeNS(ns, name, value);\n    };\n    /**\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.removeAttribute = /**\n     * @param {?} element\n     * @param {?} attribute\n     * @return {?}\n     */\n    function (element, attribute) { element.removeAttribute(attribute); };\n    /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} name\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.removeAttributeNS = /**\n     * @param {?} element\n     * @param {?} ns\n     * @param {?} name\n     * @return {?}\n     */\n    function (element, ns, name) {\n        element.removeAttributeNS(ns, name);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.templateAwareRoot = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) { return this.isTemplateElement(el) ? this.content(el) : el; };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.createHtmlDocument = /**\n     * @return {?}\n     */\n    function () {\n        return document.implementation.createHTMLDocument('fakeTitle');\n    };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getDefaultDocument = /**\n     * @return {?}\n     */\n    function () { return document; };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getBoundingClientRect = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        try {\n            return el.getBoundingClientRect();\n        }\n        catch (/** @type {?} */ e) {\n            return { top: 0, bottom: 0, left: 0, right: 0, width: 0, height: 0 };\n        }\n    };\n    /**\n     * @param {?} doc\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getTitle = /**\n     * @param {?} doc\n     * @return {?}\n     */\n    function (doc) { return doc.title; };\n    /**\n     * @param {?} doc\n     * @param {?} newTitle\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setTitle = /**\n     * @param {?} doc\n     * @param {?} newTitle\n     * @return {?}\n     */\n    function (doc, newTitle) { doc.title = newTitle || ''; };\n    /**\n     * @param {?} n\n     * @param {?} selector\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.elementMatches = /**\n     * @param {?} n\n     * @param {?} selector\n     * @return {?}\n     */\n    function (n, selector) {\n        if (this.isElementNode(n)) {\n            return n.matches && n.matches(selector) ||\n                n.msMatchesSelector && n.msMatchesSelector(selector) ||\n                n.webkitMatchesSelector && n.webkitMatchesSelector(selector);\n        }\n        return false;\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.isTemplateElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        return this.isElementNode(el) && el.nodeName === 'TEMPLATE';\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.isTextNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return node.nodeType === Node.TEXT_NODE; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.isCommentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return node.nodeType === Node.COMMENT_NODE; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.isElementNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return node.nodeType === Node.ELEMENT_NODE; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.hasShadowRoot = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node.shadowRoot != null && node instanceof HTMLElement;\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.isShadowRoot = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return node instanceof DocumentFragment; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.importIntoDoc = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return document.importNode(this.templateAwareRoot(node), true); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.adoptNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return document.adoptNode(node); };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getHref = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) { return /** @type {?} */ ((el.getAttribute('href'))); };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getEventKey = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var /** @type {?} */ key = event.key;\n        if (key == null) {\n            key = event.keyIdentifier;\n            // keyIdentifier is defined in the old draft of DOM Level 3 Events implemented by Chrome and\n            // Safari cf\n            // http://www.w3.org/TR/2007/WD-DOM-Level-3-Events-20071221/events.html#Events-KeyboardEvents-Interfaces\n            if (key == null) {\n                return 'Unidentified';\n            }\n            if (key.startsWith('U+')) {\n                key = String.fromCharCode(parseInt(key.substring(2), 16));\n                if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {\n                    // There is a bug in Chrome for numeric keypad keys:\n                    // https://code.google.com/p/chromium/issues/detail?id=155654\n                    // 1, 2, 3 ... are reported as A, B, C ...\n                    key = (/** @type {?} */ (_chromeNumKeyPadMap))[key];\n                }\n            }\n        }\n        return _keyMap[key] || key;\n    };\n    /**\n     * @param {?} doc\n     * @param {?} target\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getGlobalEventTarget = /**\n     * @param {?} doc\n     * @param {?} target\n     * @return {?}\n     */\n    function (doc, target) {\n        if (target === 'window') {\n            return window;\n        }\n        if (target === 'document') {\n            return doc;\n        }\n        if (target === 'body') {\n            return doc.body;\n        }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getHistory = /**\n     * @return {?}\n     */\n    function () { return window.history; };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getLocation = /**\n     * @return {?}\n     */\n    function () { return window.location; };\n    /**\n     * @param {?} doc\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getBaseHref = /**\n     * @param {?} doc\n     * @return {?}\n     */\n    function (doc) {\n        var /** @type {?} */ href = getBaseElementHref();\n        return href == null ? null : relativePath(href);\n    };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.resetBaseElement = /**\n     * @return {?}\n     */\n    function () { baseElement = null; };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getUserAgent = /**\n     * @return {?}\n     */\n    function () { return window.navigator.userAgent; };\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setData = /**\n     * @param {?} element\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (element, name, value) {\n        this.setAttribute(element, 'data-' + name, value);\n    };\n    /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getData = /**\n     * @param {?} element\n     * @param {?} name\n     * @return {?}\n     */\n    function (element, name) {\n        return this.getAttribute(element, 'data-' + name);\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getComputedStyle = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) { return getComputedStyle(element); };\n    // TODO(tbosch): move this into a separate environment class once we have it\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.supportsWebAnimation = /**\n     * @return {?}\n     */\n    function () {\n        return typeof (/** @type {?} */ (Element)).prototype['animate'] === 'function';\n    };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.performanceNow = /**\n     * @return {?}\n     */\n    function () {\n        // performance.now() is not available in all browsers, see\n        // http://caniuse.com/#search=performance.now\n        return window.performance && window.performance.now ? window.performance.now() :\n            new Date().getTime();\n    };\n    /**\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.supportsCookies = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.getCookie = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return common.ɵparseCookieValue(document.cookie, name); };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    BrowserDomAdapter.prototype.setCookie = /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (name, value) {\n        // document.cookie is magical, assigning into it assigns/overrides one cookie value, but does\n        // not clear other cookies.\n        document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value);\n    };\n    return BrowserDomAdapter;\n}(GenericBrowserDomAdapter));\nvar baseElement = null;\n/**\n * @return {?}\n */\nfunction getBaseElementHref() {\n    if (!baseElement) {\n        baseElement = /** @type {?} */ ((document.querySelector('base')));\n        if (!baseElement) {\n            return null;\n        }\n    }\n    return baseElement.getAttribute('href');\n}\n// based on urlUtils.js in AngularJS 1\nvar urlParsingNode;\n/**\n * @param {?} url\n * @return {?}\n */\nfunction relativePath(url) {\n    if (!urlParsingNode) {\n        urlParsingNode = document.createElement('a');\n    }\n    urlParsingNode.setAttribute('href', url);\n    return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname :\n        '/' + urlParsingNode.pathname;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing the main rendering context. In a browser this is the DOM Document.\n *\n * Note: Document might not be available in the Application Context when Application and Rendering\n * Contexts are not the same (e.g. when running the application into a Web Worker).\n *\n * @deprecated import from `\\@angular/common` instead.\n */\nvar DOCUMENT$1 = common.DOCUMENT;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction supportsState() {\n    return !!window.history.pushState;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `PlatformLocation` encapsulates all of the direct calls to platform APIs.\n * This class should not be used directly by an application developer. Instead, use\n * {\\@link Location}.\n */\nvar BrowserPlatformLocation = (function (_super) {\n    __extends(BrowserPlatformLocation, _super);\n    function BrowserPlatformLocation(_doc) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        _this._init();\n        return _this;\n    }\n    // This is moved to its own method so that `MockPlatformLocationStrategy` can overwrite it\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    BrowserPlatformLocation.prototype._init = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this)).location = getDOM().getLocation();\n        this._history = getDOM().getHistory();\n    };\n    /**\n     * @return {?}\n     */\n    BrowserPlatformLocation.prototype.getBaseHrefFromDOM = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((getDOM().getBaseHref(this._doc))); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    BrowserPlatformLocation.prototype.onPopState = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('popstate', fn, false);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    BrowserPlatformLocation.prototype.onHashChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        getDOM().getGlobalEventTarget(this._doc, 'window').addEventListener('hashchange', fn, false);\n    };\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"pathname\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.location.pathname; },\n        set: /**\n         * @param {?} newPath\n         * @return {?}\n         */\n        function (newPath) { this.location.pathname = newPath; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"search\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.location.search; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BrowserPlatformLocation.prototype, \"hash\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.location.hash; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @return {?}\n     */\n    BrowserPlatformLocation.prototype.pushState = /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @return {?}\n     */\n    function (state, title, url) {\n        if (supportsState()) {\n            this._history.pushState(state, title, url);\n        }\n        else {\n            this.location.hash = url;\n        }\n    };\n    /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @return {?}\n     */\n    BrowserPlatformLocation.prototype.replaceState = /**\n     * @param {?} state\n     * @param {?} title\n     * @param {?} url\n     * @return {?}\n     */\n    function (state, title, url) {\n        if (supportsState()) {\n            this._history.replaceState(state, title, url);\n        }\n        else {\n            this.location.hash = url;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    BrowserPlatformLocation.prototype.forward = /**\n     * @return {?}\n     */\n    function () { this._history.forward(); };\n    /**\n     * @return {?}\n     */\n    BrowserPlatformLocation.prototype.back = /**\n     * @return {?}\n     */\n    function () { this._history.back(); };\n    BrowserPlatformLocation.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    BrowserPlatformLocation.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [DOCUMENT$1,] },] },\n    ]; };\n    return BrowserPlatformLocation;\n}(common.PlatformLocation));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A service that can be used to get and add meta tags.\n *\n * \\@experimental\n */\nvar Meta = (function () {\n    function Meta(_doc) {\n        this._doc = _doc;\n        this._dom = getDOM();\n    }\n    /**\n     * @param {?} tag\n     * @param {?=} forceCreation\n     * @return {?}\n     */\n    Meta.prototype.addTag = /**\n     * @param {?} tag\n     * @param {?=} forceCreation\n     * @return {?}\n     */\n    function (tag, forceCreation) {\n        if (forceCreation === void 0) { forceCreation = false; }\n        if (!tag)\n            return null;\n        return this._getOrCreateElement(tag, forceCreation);\n    };\n    /**\n     * @param {?} tags\n     * @param {?=} forceCreation\n     * @return {?}\n     */\n    Meta.prototype.addTags = /**\n     * @param {?} tags\n     * @param {?=} forceCreation\n     * @return {?}\n     */\n    function (tags, forceCreation) {\n        var _this = this;\n        if (forceCreation === void 0) { forceCreation = false; }\n        if (!tags)\n            return [];\n        return tags.reduce(function (result, tag) {\n            if (tag) {\n                result.push(_this._getOrCreateElement(tag, forceCreation));\n            }\n            return result;\n        }, []);\n    };\n    /**\n     * @param {?} attrSelector\n     * @return {?}\n     */\n    Meta.prototype.getTag = /**\n     * @param {?} attrSelector\n     * @return {?}\n     */\n    function (attrSelector) {\n        if (!attrSelector)\n            return null;\n        return this._dom.querySelector(this._doc, \"meta[\" + attrSelector + \"]\") || null;\n    };\n    /**\n     * @param {?} attrSelector\n     * @return {?}\n     */\n    Meta.prototype.getTags = /**\n     * @param {?} attrSelector\n     * @return {?}\n     */\n    function (attrSelector) {\n        if (!attrSelector)\n            return [];\n        var /** @type {?} */ list = this._dom.querySelectorAll(this._doc, \"meta[\" + attrSelector + \"]\");\n        return list ? [].slice.call(list) : [];\n    };\n    /**\n     * @param {?} tag\n     * @param {?=} selector\n     * @return {?}\n     */\n    Meta.prototype.updateTag = /**\n     * @param {?} tag\n     * @param {?=} selector\n     * @return {?}\n     */\n    function (tag, selector) {\n        if (!tag)\n            return null;\n        selector = selector || this._parseSelector(tag);\n        var /** @type {?} */ meta = /** @type {?} */ ((this.getTag(selector)));\n        if (meta) {\n            return this._setMetaElementAttributes(tag, meta);\n        }\n        return this._getOrCreateElement(tag, true);\n    };\n    /**\n     * @param {?} attrSelector\n     * @return {?}\n     */\n    Meta.prototype.removeTag = /**\n     * @param {?} attrSelector\n     * @return {?}\n     */\n    function (attrSelector) { this.removeTagElement(/** @type {?} */ ((this.getTag(attrSelector)))); };\n    /**\n     * @param {?} meta\n     * @return {?}\n     */\n    Meta.prototype.removeTagElement = /**\n     * @param {?} meta\n     * @return {?}\n     */\n    function (meta) {\n        if (meta) {\n            this._dom.remove(meta);\n        }\n    };\n    /**\n     * @param {?} meta\n     * @param {?=} forceCreation\n     * @return {?}\n     */\n    Meta.prototype._getOrCreateElement = /**\n     * @param {?} meta\n     * @param {?=} forceCreation\n     * @return {?}\n     */\n    function (meta, forceCreation) {\n        if (forceCreation === void 0) { forceCreation = false; }\n        if (!forceCreation) {\n            var /** @type {?} */ selector = this._parseSelector(meta);\n            var /** @type {?} */ elem = /** @type {?} */ ((this.getTag(selector)));\n            // It's allowed to have multiple elements with the same name so it's not enough to\n            // just check that element with the same name already present on the page. We also need to\n            // check if element has tag attributes\n            if (elem && this._containsAttributes(meta, elem))\n                return elem;\n        }\n        var /** @type {?} */ element = /** @type {?} */ (this._dom.createElement('meta'));\n        this._setMetaElementAttributes(meta, element);\n        var /** @type {?} */ head = this._dom.getElementsByTagName(this._doc, 'head')[0];\n        this._dom.appendChild(head, element);\n        return element;\n    };\n    /**\n     * @param {?} tag\n     * @param {?} el\n     * @return {?}\n     */\n    Meta.prototype._setMetaElementAttributes = /**\n     * @param {?} tag\n     * @param {?} el\n     * @return {?}\n     */\n    function (tag, el) {\n        var _this = this;\n        Object.keys(tag).forEach(function (prop) { return _this._dom.setAttribute(el, prop, tag[prop]); });\n        return el;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    Meta.prototype._parseSelector = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ attr = tag.name ? 'name' : 'property';\n        return attr + \"=\\\"\" + tag[attr] + \"\\\"\";\n    };\n    /**\n     * @param {?} tag\n     * @param {?} elem\n     * @return {?}\n     */\n    Meta.prototype._containsAttributes = /**\n     * @param {?} tag\n     * @param {?} elem\n     * @return {?}\n     */\n    function (tag, elem) {\n        var _this = this;\n        return Object.keys(tag).every(function (key) { return _this._dom.getAttribute(elem, key) === tag[key]; });\n    };\n    Meta.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    Meta.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [DOCUMENT$1,] },] },\n    ]; };\n    return Meta;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An id that identifies a particular application being bootstrapped, that should\n * match across the client/server boundary.\n */\nvar TRANSITION_ID = new core.InjectionToken('TRANSITION_ID');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BrowserGetTestability = (function () {\n    function BrowserGetTestability() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserGetTestability.init = /**\n     * @return {?}\n     */\n    function () { core.setTestabilityGetter(new BrowserGetTestability()); };\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    BrowserGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) {\n        core.ɵglobal['getAngularTestability'] = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            var /** @type {?} */ testability = registry.findTestabilityInTree(elem, findInAncestors);\n            if (testability == null) {\n                throw new Error('Could not find testability for element.');\n            }\n            return testability;\n        };\n        core.ɵglobal['getAllAngularTestabilities'] = function () { return registry.getAllTestabilities(); };\n        core.ɵglobal['getAllAngularRootElements'] = function () { return registry.getAllRootElements(); };\n        var /** @type {?} */ whenAllStable = function (callback /** TODO #9100 */) {\n            var /** @type {?} */ testabilities = core.ɵglobal['getAllAngularTestabilities']();\n            var /** @type {?} */ count = testabilities.length;\n            var /** @type {?} */ didWork = false;\n            var /** @type {?} */ decrement = function (didWork_ /** TODO #9100 */) {\n                didWork = didWork || didWork_;\n                count--;\n                if (count == 0) {\n                    callback(didWork);\n                }\n            };\n            testabilities.forEach(function (testability /** TODO #9100 */) {\n                testability.whenStable(decrement);\n            });\n        };\n        if (!core.ɵglobal['frameworkStabilizers']) {\n            core.ɵglobal['frameworkStabilizers'] = [];\n        }\n        core.ɵglobal['frameworkStabilizers'].push(whenAllStable);\n    };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    BrowserGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        if (elem == null) {\n            return null;\n        }\n        var /** @type {?} */ t = registry.getTestability(elem);\n        if (t != null) {\n            return t;\n        }\n        else if (!findInAncestors) {\n            return null;\n        }\n        if (getDOM().isShadowRoot(elem)) {\n            return this.findTestabilityInTree(registry, getDOM().getHost(elem), true);\n        }\n        return this.findTestabilityInTree(registry, getDOM().parentElement(elem), true);\n    };\n    return BrowserGetTestability;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A service that can be used to get and set the title of a current HTML document.\n *\n * Since an Angular application can't be bootstrapped on the entire HTML document (`<html>` tag)\n * it is not possible to bind to the `text` property of the `HTMLTitleElement` elements\n * (representing the `<title>` tag). Instead, this service can be used to set and get the current\n * title value.\n *\n * \\@experimental\n */\nvar Title = (function () {\n    function Title(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * Get the title of the current HTML document.\n     */\n    /**\n     * Get the title of the current HTML document.\n     * @return {?}\n     */\n    Title.prototype.getTitle = /**\n     * Get the title of the current HTML document.\n     * @return {?}\n     */\n    function () { return getDOM().getTitle(this._doc); };\n    /**\n     * Set the title of the current HTML document.\n     * @param newTitle\n     */\n    /**\n     * Set the title of the current HTML document.\n     * @param {?} newTitle\n     * @return {?}\n     */\n    Title.prototype.setTitle = /**\n     * Set the title of the current HTML document.\n     * @param {?} newTitle\n     * @return {?}\n     */\n    function (newTitle) { getDOM().setTitle(this._doc, newTitle); };\n    Title.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    Title.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [DOCUMENT$1,] },] },\n    ]; };\n    return Title;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} input\n * @return {?}\n */\n\n/**\n * @param {?} input\n * @return {?}\n */\n\n/**\n * Exports the value under a given `name` in the global property `ng`. For example `ng.probe` if\n * `name` is `'probe'`.\n * @param {?} name Name under which it will be exported. Keep in mind this will be a property of the\n * global `ng` object.\n * @param {?} value The value to export.\n * @return {?}\n */\nfunction exportNgVar(name, value) {\n    if (typeof COMPILED === 'undefined' || !COMPILED) {\n        // Note: we can't export `ng` when using closure enhanced optimization as:\n        // - closure declares globals itself for minified names, which sometimes clobber our `ng` global\n        // - we can't declare a closure extern as the namespace `ng` is already used within Google\n        //   for typings for angularJS (via `goog.provide('ng....')`).\n        var /** @type {?} */ ng = core.ɵglobal['ng'] = (/** @type {?} */ (core.ɵglobal['ng'])) || {};\n        ng[name] = value;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE_TOKENS = {\n    'ApplicationRef': core.ApplicationRef,\n    'NgZone': core.NgZone,\n};\nvar INSPECT_GLOBAL_NAME = 'probe';\nvar CORE_TOKENS_GLOBAL_NAME = 'coreTokens';\n/**\n * Returns a {\\@link DebugElement} for the given native DOM element, or\n * null if the given native element does not have an Angular view associated\n * with it.\n * @param {?} element\n * @return {?}\n */\nfunction inspectNativeElement(element) {\n    return core.getDebugNode(element);\n}\n/**\n * @param {?} coreTokens\n * @return {?}\n */\nfunction _createNgProbe(coreTokens) {\n    exportNgVar(INSPECT_GLOBAL_NAME, inspectNativeElement);\n    exportNgVar(CORE_TOKENS_GLOBAL_NAME, __assign({}, CORE_TOKENS, _ngProbeTokensToMap(coreTokens || [])));\n    return function () { return inspectNativeElement; };\n}\n/**\n * @param {?} tokens\n * @return {?}\n */\nfunction _ngProbeTokensToMap(tokens) {\n    return tokens.reduce(function (prev, t) { return (prev[t.name] = t.token, prev); }, {});\n}\n/**\n * Providers which support debugging Angular applications (e.g. via `ng.probe`).\n */\nvar ELEMENT_PROBE_PROVIDERS = [\n    {\n        provide: core.APP_INITIALIZER,\n        useFactory: _createNgProbe,\n        deps: [\n            [core.NgProbeToken, new core.Optional()],\n        ],\n        multi: true,\n    },\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n */\nvar EVENT_MANAGER_PLUGINS = new core.InjectionToken('EventManagerPlugins');\n/**\n * \\@stable\n */\nvar EventManager = (function () {\n    function EventManager(plugins, _zone) {\n        var _this = this;\n        this._zone = _zone;\n        this._eventNameToPlugin = new Map();\n        plugins.forEach(function (p) { return p.manager = _this; });\n        this._plugins = plugins.slice().reverse();\n    }\n    /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    EventManager.prototype.addEventListener = /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    function (element, eventName, handler) {\n        var /** @type {?} */ plugin = this._findPluginFor(eventName);\n        return plugin.addEventListener(element, eventName, handler);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    EventManager.prototype.addGlobalEventListener = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    function (target, eventName, handler) {\n        var /** @type {?} */ plugin = this._findPluginFor(eventName);\n        return plugin.addGlobalEventListener(target, eventName, handler);\n    };\n    /**\n     * @return {?}\n     */\n    EventManager.prototype.getZone = /**\n     * @return {?}\n     */\n    function () { return this._zone; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} eventName\n     * @return {?}\n     */\n    EventManager.prototype._findPluginFor = /**\n     * \\@internal\n     * @param {?} eventName\n     * @return {?}\n     */\n    function (eventName) {\n        var /** @type {?} */ plugin = this._eventNameToPlugin.get(eventName);\n        if (plugin) {\n            return plugin;\n        }\n        var /** @type {?} */ plugins = this._plugins;\n        for (var /** @type {?} */ i = 0; i < plugins.length; i++) {\n            var /** @type {?} */ plugin_1 = plugins[i];\n            if (plugin_1.supports(eventName)) {\n                this._eventNameToPlugin.set(eventName, plugin_1);\n                return plugin_1;\n            }\n        }\n        throw new Error(\"No event manager plugin found for event \" + eventName);\n    };\n    EventManager.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    EventManager.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: core.Inject, args: [EVENT_MANAGER_PLUGINS,] },] },\n        { type: core.NgZone, },\n    ]; };\n    return EventManager;\n}());\n/**\n * @abstract\n */\nvar EventManagerPlugin = (function () {\n    function EventManagerPlugin(_doc) {\n        this._doc = _doc;\n    }\n    /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    EventManagerPlugin.prototype.addGlobalEventListener = /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    function (element, eventName, handler) {\n        var /** @type {?} */ target = getDOM().getGlobalEventTarget(this._doc, element);\n        if (!target) {\n            throw new Error(\"Unsupported event target \" + target + \" for event \" + eventName);\n        }\n        return this.addEventListener(target, eventName, handler);\n    };\n    return EventManagerPlugin;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SharedStylesHost = (function () {\n    function SharedStylesHost() {\n        /**\n         * \\@internal\n         */\n        this._stylesSet = new Set();\n    }\n    /**\n     * @param {?} styles\n     * @return {?}\n     */\n    SharedStylesHost.prototype.addStyles = /**\n     * @param {?} styles\n     * @return {?}\n     */\n    function (styles) {\n        var _this = this;\n        var /** @type {?} */ additions = new Set();\n        styles.forEach(function (style) {\n            if (!_this._stylesSet.has(style)) {\n                _this._stylesSet.add(style);\n                additions.add(style);\n            }\n        });\n        this.onStylesAdded(additions);\n    };\n    /**\n     * @param {?} additions\n     * @return {?}\n     */\n    SharedStylesHost.prototype.onStylesAdded = /**\n     * @param {?} additions\n     * @return {?}\n     */\n    function (additions) { };\n    /**\n     * @return {?}\n     */\n    SharedStylesHost.prototype.getAllStyles = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._stylesSet); };\n    SharedStylesHost.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    SharedStylesHost.ctorParameters = function () { return []; };\n    return SharedStylesHost;\n}());\nvar DomSharedStylesHost = (function (_super) {\n    __extends(DomSharedStylesHost, _super);\n    function DomSharedStylesHost(_doc) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        _this._hostNodes = new Set();\n        _this._styleNodes = new Set();\n        _this._hostNodes.add(_doc.head);\n        return _this;\n    }\n    /**\n     * @param {?} styles\n     * @param {?} host\n     * @return {?}\n     */\n    DomSharedStylesHost.prototype._addStylesToHost = /**\n     * @param {?} styles\n     * @param {?} host\n     * @return {?}\n     */\n    function (styles, host) {\n        var _this = this;\n        styles.forEach(function (style) {\n            var /** @type {?} */ styleEl = _this._doc.createElement('style');\n            styleEl.textContent = style;\n            _this._styleNodes.add(host.appendChild(styleEl));\n        });\n    };\n    /**\n     * @param {?} hostNode\n     * @return {?}\n     */\n    DomSharedStylesHost.prototype.addHost = /**\n     * @param {?} hostNode\n     * @return {?}\n     */\n    function (hostNode) {\n        this._addStylesToHost(this._stylesSet, hostNode);\n        this._hostNodes.add(hostNode);\n    };\n    /**\n     * @param {?} hostNode\n     * @return {?}\n     */\n    DomSharedStylesHost.prototype.removeHost = /**\n     * @param {?} hostNode\n     * @return {?}\n     */\n    function (hostNode) { this._hostNodes.delete(hostNode); };\n    /**\n     * @param {?} additions\n     * @return {?}\n     */\n    DomSharedStylesHost.prototype.onStylesAdded = /**\n     * @param {?} additions\n     * @return {?}\n     */\n    function (additions) {\n        var _this = this;\n        this._hostNodes.forEach(function (hostNode) { return _this._addStylesToHost(additions, hostNode); });\n    };\n    /**\n     * @return {?}\n     */\n    DomSharedStylesHost.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this._styleNodes.forEach(function (styleNode) { return getDOM().remove(styleNode); }); };\n    DomSharedStylesHost.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    DomSharedStylesHost.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [DOCUMENT$1,] },] },\n    ]; };\n    return DomSharedStylesHost;\n}(SharedStylesHost));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NAMESPACE_URIS = {\n    'svg': 'http://www.w3.org/2000/svg',\n    'xhtml': 'http://www.w3.org/1999/xhtml',\n    'xlink': 'http://www.w3.org/1999/xlink',\n    'xml': 'http://www.w3.org/XML/1998/namespace',\n    'xmlns': 'http://www.w3.org/2000/xmlns/',\n};\nvar COMPONENT_REGEX = /%COMP%/g;\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\n/**\n * @param {?} componentShortId\n * @return {?}\n */\nfunction shimContentAttribute(componentShortId) {\n    return CONTENT_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n/**\n * @param {?} componentShortId\n * @return {?}\n */\nfunction shimHostAttribute(componentShortId) {\n    return HOST_ATTR.replace(COMPONENT_REGEX, componentShortId);\n}\n/**\n * @param {?} compId\n * @param {?} styles\n * @param {?} target\n * @return {?}\n */\nfunction flattenStyles(compId, styles, target) {\n    for (var /** @type {?} */ i = 0; i < styles.length; i++) {\n        var /** @type {?} */ style = styles[i];\n        if (Array.isArray(style)) {\n            flattenStyles(compId, style, target);\n        }\n        else {\n            style = style.replace(COMPONENT_REGEX, compId);\n            target.push(style);\n        }\n    }\n    return target;\n}\n/**\n * @param {?} eventHandler\n * @return {?}\n */\nfunction decoratePreventDefault(eventHandler) {\n    return function (event) {\n        var /** @type {?} */ allowDefaultBehavior = eventHandler(event);\n        if (allowDefaultBehavior === false) {\n            // TODO(tbosch): move preventDefault into event plugins...\n            event.preventDefault();\n            event.returnValue = false;\n        }\n    };\n}\nvar DomRendererFactory2 = (function () {\n    function DomRendererFactory2(eventManager, sharedStylesHost) {\n        this.eventManager = eventManager;\n        this.sharedStylesHost = sharedStylesHost;\n        this.rendererByCompId = new Map();\n        this.defaultRenderer = new DefaultDomRenderer2(eventManager);\n    }\n    /**\n     * @param {?} element\n     * @param {?} type\n     * @return {?}\n     */\n    DomRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} type\n     * @return {?}\n     */\n    function (element, type) {\n        if (!element || !type) {\n            return this.defaultRenderer;\n        }\n        switch (type.encapsulation) {\n            case core.ViewEncapsulation.Emulated: {\n                var /** @type {?} */ renderer = this.rendererByCompId.get(type.id);\n                if (!renderer) {\n                    renderer =\n                        new EmulatedEncapsulationDomRenderer2(this.eventManager, this.sharedStylesHost, type);\n                    this.rendererByCompId.set(type.id, renderer);\n                }\n                (/** @type {?} */ (renderer)).applyToHost(element);\n                return renderer;\n            }\n            case core.ViewEncapsulation.Native:\n                return new ShadowDomRenderer(this.eventManager, this.sharedStylesHost, element, type);\n            default: {\n                if (!this.rendererByCompId.has(type.id)) {\n                    var /** @type {?} */ styles = flattenStyles(type.id, type.styles, []);\n                    this.sharedStylesHost.addStyles(styles);\n                    this.rendererByCompId.set(type.id, this.defaultRenderer);\n                }\n                return this.defaultRenderer;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @return {?}\n     */\n    DomRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () { };\n    DomRendererFactory2.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    DomRendererFactory2.ctorParameters = function () { return [\n        { type: EventManager, },\n        { type: DomSharedStylesHost, },\n    ]; };\n    return DomRendererFactory2;\n}());\nvar DefaultDomRenderer2 = (function () {\n    function DefaultDomRenderer2(eventManager) {\n        this.eventManager = eventManager;\n        this.data = Object.create(null);\n    }\n    /**\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        if (namespace) {\n            return document.createElementNS(NAMESPACE_URIS[namespace], name);\n        }\n        return document.createElement(name);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return document.createComment(value); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return document.createTextNode(value); };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) { parent.appendChild(newChild); };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        if (parent) {\n            parent.insertBefore(newChild, refChild);\n        }\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        if (parent) {\n            parent.removeChild(oldChild);\n        }\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        var /** @type {?} */ el = typeof selectorOrNode === 'string' ? document.querySelector(selectorOrNode) :\n            selectorOrNode;\n        if (!el) {\n            throw new Error(\"The selector \\\"\" + selectorOrNode + \"\\\" did not match any elements\");\n        }\n        el.textContent = '';\n        return el;\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return node.parentNode; };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return node.nextSibling; };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        if (namespace) {\n            name = namespace + \":\" + name;\n            var /** @type {?} */ namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.setAttributeNS(namespaceUri, name, value);\n            }\n            else {\n                el.setAttribute(name, value);\n            }\n        }\n        else {\n            el.setAttribute(name, value);\n        }\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        if (namespace) {\n            var /** @type {?} */ namespaceUri = NAMESPACE_URIS[namespace];\n            if (namespaceUri) {\n                el.removeAttributeNS(namespaceUri, name);\n            }\n            else {\n                el.removeAttribute(namespace + \":\" + name);\n            }\n        }\n        else {\n            el.removeAttribute(name);\n        }\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) { el.classList.add(name); };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) { el.classList.remove(name); };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        if (flags & core.RendererStyleFlags2.DashCase) {\n            el.style.setProperty(style, value, !!(flags & core.RendererStyleFlags2.Important) ? 'important' : '');\n        }\n        else {\n            el.style[style] = value;\n        }\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        if (flags & core.RendererStyleFlags2.DashCase) {\n            el.style.removeProperty(style);\n        }\n        else {\n            // IE requires '' instead of null\n            // see https://github.com/angular/angular/issues/7916\n            el.style[style] = '';\n        }\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        checkNoSyntheticProp(name, 'property');\n        el[name] = value;\n    };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { node.nodeValue = value; };\n    /**\n     * @param {?} target\n     * @param {?} event\n     * @param {?} callback\n     * @return {?}\n     */\n    DefaultDomRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} event\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, event, callback) {\n        checkNoSyntheticProp(event, 'listener');\n        if (typeof target === 'string') {\n            return /** @type {?} */ (this.eventManager.addGlobalEventListener(target, event, decoratePreventDefault(callback)));\n        }\n        return /** @type {?} */ ((this.eventManager.addEventListener(target, event, decoratePreventDefault(callback))));\n    };\n    return DefaultDomRenderer2;\n}());\nvar AT_CHARCODE = '@'.charCodeAt(0);\n/**\n * @param {?} name\n * @param {?} nameKind\n * @return {?}\n */\nfunction checkNoSyntheticProp(name, nameKind) {\n    if (name.charCodeAt(0) === AT_CHARCODE) {\n        throw new Error(\"Found the synthetic \" + nameKind + \" \" + name + \". Please include either \\\"BrowserAnimationsModule\\\" or \\\"NoopAnimationsModule\\\" in your application.\");\n    }\n}\nvar EmulatedEncapsulationDomRenderer2 = (function (_super) {\n    __extends(EmulatedEncapsulationDomRenderer2, _super);\n    function EmulatedEncapsulationDomRenderer2(eventManager, sharedStylesHost, component) {\n        var _this = _super.call(this, eventManager) || this;\n        _this.component = component;\n        var /** @type {?} */ styles = flattenStyles(component.id, component.styles, []);\n        sharedStylesHost.addStyles(styles);\n        _this.contentAttr = shimContentAttribute(component.id);\n        _this.hostAttr = shimHostAttribute(component.id);\n        return _this;\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    EmulatedEncapsulationDomRenderer2.prototype.applyToHost = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) { _super.prototype.setAttribute.call(this, element, this.hostAttr, ''); };\n    /**\n     * @param {?} parent\n     * @param {?} name\n     * @return {?}\n     */\n    EmulatedEncapsulationDomRenderer2.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} name\n     * @return {?}\n     */\n    function (parent, name) {\n        var /** @type {?} */ el = _super.prototype.createElement.call(this, parent, name);\n        _super.prototype.setAttribute.call(this, el, this.contentAttr, '');\n        return el;\n    };\n    return EmulatedEncapsulationDomRenderer2;\n}(DefaultDomRenderer2));\nvar ShadowDomRenderer = (function (_super) {\n    __extends(ShadowDomRenderer, _super);\n    function ShadowDomRenderer(eventManager, sharedStylesHost, hostEl, component) {\n        var _this = _super.call(this, eventManager) || this;\n        _this.sharedStylesHost = sharedStylesHost;\n        _this.hostEl = hostEl;\n        _this.component = component;\n        _this.shadowRoot = (/** @type {?} */ (hostEl)).createShadowRoot();\n        _this.sharedStylesHost.addHost(_this.shadowRoot);\n        var /** @type {?} */ styles = flattenStyles(component.id, component.styles, []);\n        for (var /** @type {?} */ i = 0; i < styles.length; i++) {\n            var /** @type {?} */ styleEl = document.createElement('style');\n            styleEl.textContent = styles[i];\n            _this.shadowRoot.appendChild(styleEl);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ShadowDomRenderer.prototype.nodeOrShadowRoot = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return node === this.hostEl ? this.shadowRoot : node; };\n    /**\n     * @return {?}\n     */\n    ShadowDomRenderer.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.sharedStylesHost.removeHost(this.shadowRoot); };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    ShadowDomRenderer.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        return _super.prototype.appendChild.call(this, this.nodeOrShadowRoot(parent), newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    ShadowDomRenderer.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        return _super.prototype.insertBefore.call(this, this.nodeOrShadowRoot(parent), newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    ShadowDomRenderer.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        return _super.prototype.removeChild.call(this, this.nodeOrShadowRoot(parent), oldChild);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ShadowDomRenderer.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return this.nodeOrShadowRoot(_super.prototype.parentNode.call(this, this.nodeOrShadowRoot(node)));\n    };\n    return ShadowDomRenderer;\n}(DefaultDomRenderer2));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ɵ0 = function (v) {\n    return v;\n};\n/**\n * Detect if Zone is present. If it is then use simple zone aware 'addEventListener'\n * since Angular can do much more\n * efficient bookkeeping than Zone can, because we have additional information. This speeds up\n * addEventListener by 3x.\n */\nvar __symbol__ = (typeof Zone !== 'undefined') && (/** @type {?} */ (Zone))['__symbol__'] || ɵ0;\nvar ADD_EVENT_LISTENER = __symbol__('addEventListener');\nvar REMOVE_EVENT_LISTENER = __symbol__('removeEventListener');\nvar symbolNames = {};\nvar FALSE = 'FALSE';\nvar ANGULAR = 'ANGULAR';\nvar NATIVE_ADD_LISTENER = 'addEventListener';\nvar NATIVE_REMOVE_LISTENER = 'removeEventListener';\nvar blackListedEvents = (typeof Zone !== 'undefined') && (/** @type {?} */ (Zone))[__symbol__('BLACK_LISTED_EVENTS')];\nvar blackListedMap;\nif (blackListedEvents) {\n    blackListedMap = {};\n    blackListedEvents.forEach(function (eventName) { blackListedMap[eventName] = eventName; });\n}\nvar isBlackListedEvent = function (eventName) {\n    if (!blackListedMap) {\n        return false;\n    }\n    return blackListedMap.hasOwnProperty(eventName);\n};\n// a global listener to handle all dom event,\n// so we do not need to create a closure everytime\nvar globalListener = function (event) {\n    var /** @type {?} */ symbolName = symbolNames[event.type];\n    if (!symbolName) {\n        return;\n    }\n    var /** @type {?} */ taskDatas = this[symbolName];\n    if (!taskDatas) {\n        return;\n    }\n    var /** @type {?} */ args = [event];\n    if (taskDatas.length === 1) {\n        // if taskDatas only have one element, just invoke it\n        var /** @type {?} */ taskData = taskDatas[0];\n        if (taskData.zone !== Zone.current) {\n            // only use Zone.run when Zone.current not equals to stored zone\n            return taskData.zone.run(taskData.handler, this, args);\n        }\n        else {\n            return taskData.handler.apply(this, args);\n        }\n    }\n    else {\n        // copy tasks as a snapshot to avoid event handlers remove\n        // itself or others\n        var /** @type {?} */ copiedTasks = taskDatas.slice();\n        for (var /** @type {?} */ i = 0; i < copiedTasks.length; i++) {\n            var /** @type {?} */ taskData = copiedTasks[i];\n            if (taskData.zone !== Zone.current) {\n                // only use Zone.run when Zone.current not equals to stored zone\n                taskData.zone.run(taskData.handler, this, args);\n            }\n            else {\n                taskData.handler.apply(this, args);\n            }\n        }\n    }\n};\nvar DomEventsPlugin = (function (_super) {\n    __extends(DomEventsPlugin, _super);\n    function DomEventsPlugin(doc, ngZone) {\n        var _this = _super.call(this, doc) || this;\n        _this.ngZone = ngZone;\n        return _this;\n    }\n    // This plugin should come last in the list of plugins, because it accepts all\n    // events.\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    DomEventsPlugin.prototype.supports = /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    function (eventName) { return true; };\n    /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    DomEventsPlugin.prototype.addEventListener = /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    function (element, eventName, handler) {\n        var _this = this;\n        /**\n         * This code is about to add a listener to the DOM. If Zone.js is present, than\n         * `addEventListener` has been patched. The patched code adds overhead in both\n         * memory and speed (3x slower) than native. For this reason if we detect that\n         * Zone.js is present we use a simple version of zone aware addEventListener instead.\n         * The result is faster registration and the zone will be restored.\n         * But ZoneSpec.onScheduleTask, ZoneSpec.onInvokeTask, ZoneSpec.onCancelTask\n         * will not be invoked\n         * We also do manual zone restoration in element.ts renderEventHandlerClosure method.\n         *\n         * NOTE: it is possible that the element is from different iframe, and so we\n         * have to check before we execute the method.\n         */\n        var /** @type {?} */ zoneJsLoaded = element[ADD_EVENT_LISTENER];\n        var /** @type {?} */ callback = /** @type {?} */ (handler);\n        // if zonejs is loaded and current zone is not ngZone\n        // we keep Zone.current on target for later restoration.\n        if (zoneJsLoaded && (!core.NgZone.isInAngularZone() || isBlackListedEvent(eventName))) {\n            var /** @type {?} */ symbolName = symbolNames[eventName];\n            if (!symbolName) {\n                symbolName = symbolNames[eventName] = __symbol__(ANGULAR + eventName + FALSE);\n            }\n            var /** @type {?} */ taskDatas = (/** @type {?} */ (element))[symbolName];\n            var /** @type {?} */ globalListenerRegistered = taskDatas && taskDatas.length > 0;\n            if (!taskDatas) {\n                taskDatas = (/** @type {?} */ (element))[symbolName] = [];\n            }\n            var /** @type {?} */ zone = isBlackListedEvent(eventName) ? Zone.root : Zone.current;\n            if (taskDatas.length === 0) {\n                taskDatas.push({ zone: zone, handler: callback });\n            }\n            else {\n                var /** @type {?} */ callbackRegistered = false;\n                for (var /** @type {?} */ i = 0; i < taskDatas.length; i++) {\n                    if (taskDatas[i].handler === callback) {\n                        callbackRegistered = true;\n                        break;\n                    }\n                }\n                if (!callbackRegistered) {\n                    taskDatas.push({ zone: zone, handler: callback });\n                }\n            }\n            if (!globalListenerRegistered) {\n                element[ADD_EVENT_LISTENER](eventName, globalListener, false);\n            }\n        }\n        else {\n            element[NATIVE_ADD_LISTENER](eventName, callback, false);\n        }\n        return function () { return _this.removeEventListener(element, eventName, callback); };\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DomEventsPlugin.prototype.removeEventListener = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        var /** @type {?} */ underlyingRemove = target[REMOVE_EVENT_LISTENER];\n        // zone.js not loaded, use native removeEventListener\n        if (!underlyingRemove) {\n            return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n        }\n        var /** @type {?} */ symbolName = symbolNames[eventName];\n        var /** @type {?} */ taskDatas = symbolName && target[symbolName];\n        if (!taskDatas) {\n            // addEventListener not using patched version\n            // just call native removeEventListener\n            return target[NATIVE_REMOVE_LISTENER].apply(target, [eventName, callback, false]);\n        }\n        for (var /** @type {?} */ i = 0; i < taskDatas.length; i++) {\n            // remove listener from taskDatas if the callback equals\n            if (taskDatas[i].handler === callback) {\n                taskDatas.splice(i, 1);\n                break;\n            }\n        }\n        if (taskDatas.length === 0) {\n            // all listeners are removed, we can remove the globalListener from target\n            underlyingRemove.apply(target, [eventName, globalListener, false]);\n        }\n    };\n    DomEventsPlugin.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    DomEventsPlugin.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [DOCUMENT$1,] },] },\n        { type: core.NgZone, },\n    ]; };\n    return DomEventsPlugin;\n}(EventManagerPlugin));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EVENT_NAMES = {\n    // pan\n    'pan': true,\n    'panstart': true,\n    'panmove': true,\n    'panend': true,\n    'pancancel': true,\n    'panleft': true,\n    'panright': true,\n    'panup': true,\n    'pandown': true,\n    // pinch\n    'pinch': true,\n    'pinchstart': true,\n    'pinchmove': true,\n    'pinchend': true,\n    'pinchcancel': true,\n    'pinchin': true,\n    'pinchout': true,\n    // press\n    'press': true,\n    'pressup': true,\n    // rotate\n    'rotate': true,\n    'rotatestart': true,\n    'rotatemove': true,\n    'rotateend': true,\n    'rotatecancel': true,\n    // swipe\n    'swipe': true,\n    'swipeleft': true,\n    'swiperight': true,\n    'swipeup': true,\n    'swipedown': true,\n    // tap\n    'tap': true,\n};\n/**\n * A DI token that you can use to provide{\\@link HammerGestureConfig} to Angular. Use it to configure\n * Hammer gestures.\n *\n * \\@experimental\n */\nvar HAMMER_GESTURE_CONFIG = new core.InjectionToken('HammerGestureConfig');\n/**\n * @record\n */\n\n/**\n * \\@experimental\n */\nvar HammerGestureConfig = (function () {\n    function HammerGestureConfig() {\n        this.events = [];\n        this.overrides = {};\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    HammerGestureConfig.prototype.buildHammer = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var /** @type {?} */ mc = new Hammer(element);\n        mc.get('pinch').set({ enable: true });\n        mc.get('rotate').set({ enable: true });\n        for (var /** @type {?} */ eventName in this.overrides) {\n            mc.get(eventName).set(this.overrides[eventName]);\n        }\n        return mc;\n    };\n    HammerGestureConfig.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    HammerGestureConfig.ctorParameters = function () { return []; };\n    return HammerGestureConfig;\n}());\nvar HammerGesturesPlugin = (function (_super) {\n    __extends(HammerGesturesPlugin, _super);\n    function HammerGesturesPlugin(doc, _config) {\n        var _this = _super.call(this, doc) || this;\n        _this._config = _config;\n        return _this;\n    }\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    HammerGesturesPlugin.prototype.supports = /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    function (eventName) {\n        if (!EVENT_NAMES.hasOwnProperty(eventName.toLowerCase()) && !this.isCustomEvent(eventName)) {\n            return false;\n        }\n        if (!(/** @type {?} */ (window)).Hammer) {\n            throw new Error(\"Hammer.js is not loaded, can not bind \" + eventName + \" event\");\n        }\n        return true;\n    };\n    /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    HammerGesturesPlugin.prototype.addEventListener = /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    function (element, eventName, handler) {\n        var _this = this;\n        var /** @type {?} */ zone = this.manager.getZone();\n        eventName = eventName.toLowerCase();\n        return zone.runOutsideAngular(function () {\n            // Creating the manager bind events, must be done outside of angular\n            var /** @type {?} */ mc = _this._config.buildHammer(element);\n            var /** @type {?} */ callback = function (eventObj) {\n                zone.runGuarded(function () { handler(eventObj); });\n            };\n            mc.on(eventName, callback);\n            return function () { return mc.off(eventName, callback); };\n        });\n    };\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    HammerGesturesPlugin.prototype.isCustomEvent = /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    function (eventName) { return this._config.events.indexOf(eventName) > -1; };\n    HammerGesturesPlugin.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    HammerGesturesPlugin.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [DOCUMENT$1,] },] },\n        { type: HammerGestureConfig, decorators: [{ type: core.Inject, args: [HAMMER_GESTURE_CONFIG,] },] },\n    ]; };\n    return HammerGesturesPlugin;\n}(EventManagerPlugin));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar MODIFIER_KEYS = ['alt', 'control', 'meta', 'shift'];\nvar ɵ0$1 = function (event) { return event.altKey; };\nvar ɵ1$1 = function (event) { return event.ctrlKey; };\nvar ɵ2$1 = function (event) { return event.metaKey; };\nvar ɵ3 = function (event) { return event.shiftKey; };\nvar MODIFIER_KEY_GETTERS = {\n    'alt': ɵ0$1,\n    'control': ɵ1$1,\n    'meta': ɵ2$1,\n    'shift': ɵ3\n};\n/**\n * \\@experimental\n */\nvar KeyEventsPlugin = (function (_super) {\n    __extends(KeyEventsPlugin, _super);\n    function KeyEventsPlugin(doc) {\n        return _super.call(this, doc) || this;\n    }\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    KeyEventsPlugin.prototype.supports = /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    function (eventName) { return KeyEventsPlugin.parseEventName(eventName) != null; };\n    /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    KeyEventsPlugin.prototype.addEventListener = /**\n     * @param {?} element\n     * @param {?} eventName\n     * @param {?} handler\n     * @return {?}\n     */\n    function (element, eventName, handler) {\n        var /** @type {?} */ parsedEvent = /** @type {?} */ ((KeyEventsPlugin.parseEventName(eventName)));\n        var /** @type {?} */ outsideHandler = KeyEventsPlugin.eventCallback(parsedEvent['fullKey'], handler, this.manager.getZone());\n        return this.manager.getZone().runOutsideAngular(function () {\n            return getDOM().onAndCancel(element, parsedEvent['domEventName'], outsideHandler);\n        });\n    };\n    /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    KeyEventsPlugin.parseEventName = /**\n     * @param {?} eventName\n     * @return {?}\n     */\n    function (eventName) {\n        var /** @type {?} */ parts = eventName.toLowerCase().split('.');\n        var /** @type {?} */ domEventName = parts.shift();\n        if ((parts.length === 0) || !(domEventName === 'keydown' || domEventName === 'keyup')) {\n            return null;\n        }\n        var /** @type {?} */ key = KeyEventsPlugin._normalizeKey(/** @type {?} */ ((parts.pop())));\n        var /** @type {?} */ fullKey = '';\n        MODIFIER_KEYS.forEach(function (modifierName) {\n            var /** @type {?} */ index = parts.indexOf(modifierName);\n            if (index > -1) {\n                parts.splice(index, 1);\n                fullKey += modifierName + '.';\n            }\n        });\n        fullKey += key;\n        if (parts.length != 0 || key.length === 0) {\n            // returning null instead of throwing to let another plugin process the event\n            return null;\n        }\n        var /** @type {?} */ result = {};\n        result['domEventName'] = domEventName;\n        result['fullKey'] = fullKey;\n        return result;\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    KeyEventsPlugin.getEventFullKey = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        var /** @type {?} */ fullKey = '';\n        var /** @type {?} */ key = getDOM().getEventKey(event);\n        key = key.toLowerCase();\n        if (key === ' ') {\n            key = 'space'; // for readability\n        }\n        else if (key === '.') {\n            key = 'dot'; // because '.' is used as a separator in event names\n        }\n        MODIFIER_KEYS.forEach(function (modifierName) {\n            if (modifierName != key) {\n                var /** @type {?} */ modifierGetter = MODIFIER_KEY_GETTERS[modifierName];\n                if (modifierGetter(event)) {\n                    fullKey += modifierName + '.';\n                }\n            }\n        });\n        fullKey += key;\n        return fullKey;\n    };\n    /**\n     * @param {?} fullKey\n     * @param {?} handler\n     * @param {?} zone\n     * @return {?}\n     */\n    KeyEventsPlugin.eventCallback = /**\n     * @param {?} fullKey\n     * @param {?} handler\n     * @param {?} zone\n     * @return {?}\n     */\n    function (fullKey, handler, zone) {\n        return function (event /** TODO #9100 */) {\n            if (KeyEventsPlugin.getEventFullKey(event) === fullKey) {\n                zone.runGuarded(function () { return handler(event); });\n            }\n        };\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} keyName\n     * @return {?}\n     */\n    KeyEventsPlugin._normalizeKey = /**\n     * \\@internal\n     * @param {?} keyName\n     * @return {?}\n     */\n    function (keyName) {\n        // TODO: switch to a Map if the mapping grows too much\n        switch (keyName) {\n            case 'esc':\n                return 'escape';\n            default:\n                return keyName;\n        }\n    };\n    KeyEventsPlugin.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    KeyEventsPlugin.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [DOCUMENT$1,] },] },\n    ]; };\n    return KeyEventsPlugin;\n}(EventManagerPlugin));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nvar SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/**\n * A pattern that matches safe data URLs. Only matches image, video and audio types.\n */\nvar DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n/**\n * @param {?} url\n * @return {?}\n */\nfunction sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (core.isDevMode()) {\n        getDOM().log(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n    }\n    return 'unsafe:' + url;\n}\n/**\n * @param {?} srcset\n * @return {?}\n */\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map(function (srcset) { return sanitizeUrl(srcset.trim()); }).join(', ');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A <body> element that can be safely used to parse untrusted HTML. Lazily initialized below.\n */\nvar inertElement = null;\n/**\n * Lazily initialized to make sure the DOM adapter gets set before use.\n */\nvar DOM = /** @type {?} */ ((null));\n/**\n * Returns an HTML element that is guaranteed to not execute code when creating elements in it.\n * @return {?}\n */\nfunction getInertElement() {\n    if (inertElement)\n        return inertElement;\n    DOM = getDOM();\n    // Prefer using <template> element if supported.\n    var /** @type {?} */ templateEl = DOM.createElement('template');\n    if ('content' in templateEl)\n        return templateEl;\n    var /** @type {?} */ doc = DOM.createHtmlDocument();\n    inertElement = DOM.querySelector(doc, 'body');\n    if (inertElement == null) {\n        // usually there should be only one body element in the document, but IE doesn't have any, so we\n        // need to create one.\n        var /** @type {?} */ html = DOM.createElement('html', doc);\n        inertElement = DOM.createElement('body', doc);\n        DOM.appendChild(html, inertElement);\n        DOM.appendChild(doc, html);\n    }\n    return inertElement;\n}\n/**\n * @param {?} tags\n * @return {?}\n */\nfunction tagSet(tags) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, _a = tags.split(','); _i < _a.length; _i++) {\n        var t = _a[_i];\n        res[t] = true;\n    }\n    return res;\n}\n/**\n * @param {...?} sets\n * @return {?}\n */\nfunction merge() {\n    var sets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sets[_i] = arguments[_i];\n    }\n    var /** @type {?} */ res = {};\n    for (var _a = 0, sets_1 = sets; _a < sets_1.length; _a++) {\n        var s = sets_1[_a];\n        for (var /** @type {?} */ v in s) {\n            if (s.hasOwnProperty(v))\n                res[v] = true;\n        }\n    }\n    return res;\n}\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nvar OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nvar OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n// Safe Block Elements - HTML5\nvar BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n// Inline Elements - HTML5\nvar INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\nvar VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n// Attributes that have href and hence need to be sanitized\nvar URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n// Attributes that have special href set hence need to be sanitized\nvar SRCSET_ATTRS = tagSet('srcset');\nvar HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\nvar VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nvar SanitizingHtmlSerializer = (function () {\n    function SanitizingHtmlSerializer() {\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.sanitizeChildren = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n        // However this code never accesses properties off of `document` before deleting its contents\n        // again, so it shouldn't be vulnerable to DOM clobbering.\n        var /** @type {?} */ current = /** @type {?} */ ((el.firstChild));\n        while (current) {\n            if (DOM.isElementNode(current)) {\n                this.startElement(/** @type {?} */ (current));\n            }\n            else if (DOM.isTextNode(current)) {\n                this.chars(/** @type {?} */ ((DOM.nodeValue(current))));\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (DOM.firstChild(current)) {\n                current = /** @type {?} */ ((DOM.firstChild(current)));\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (DOM.isElementNode(current)) {\n                    this.endElement(/** @type {?} */ (current));\n                }\n                var /** @type {?} */ next = checkClobberedElement(current, /** @type {?} */ ((DOM.nextSibling(current))));\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = checkClobberedElement(current, /** @type {?} */ ((DOM.parentElement(current))));\n            }\n        }\n        return this.buf.join('');\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.startElement = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        var _this = this;\n        var /** @type {?} */ tagName = DOM.nodeName(element).toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return;\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        DOM.attributeMap(element).forEach(function (value, attrName) {\n            var /** @type {?} */ lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                _this.sanitizedSomething = true;\n                return;\n            }\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            _this.buf.push(' ');\n            _this.buf.push(attrName);\n            _this.buf.push('=\"');\n            _this.buf.push(encodeEntities(value));\n            _this.buf.push('\"');\n        });\n        this.buf.push('>');\n    };\n    /**\n     * @param {?} current\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.endElement = /**\n     * @param {?} current\n     * @return {?}\n     */\n    function (current) {\n        var /** @type {?} */ tagName = DOM.nodeName(current).toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    SanitizingHtmlSerializer.prototype.chars = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) { this.buf.push(encodeEntities(chars)); };\n    return SanitizingHtmlSerializer;\n}());\n/**\n * @param {?} node\n * @param {?} nextNode\n * @return {?}\n */\nfunction checkClobberedElement(node, nextNode) {\n    if (nextNode && DOM.contains(node, nextNode)) {\n        throw new Error(\"Failed to sanitize html because the element is clobbered: \" + DOM.getOuterHTML(node));\n    }\n    return nextNode;\n}\n// Regular Expressions for parsing tags and attributes\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param {?} value\n * @return {?}\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        var /** @type {?} */ hi = match.charCodeAt(0);\n        var /** @type {?} */ low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\n/**\n * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g. 'ns1:xlink:foo').\n *\n * This is undesirable since we don't want to allow any of these custom attributes. This method\n * strips them all.\n * @param {?} el\n * @return {?}\n */\nfunction stripCustomNsAttrs(el) {\n    DOM.attributeMap(el).forEach(function (_, attrName) {\n        if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n            DOM.removeAttribute(el, attrName);\n        }\n    });\n    for (var _i = 0, _a = DOM.childNodesAsList(el); _i < _a.length; _i++) {\n        var n = _a[_i];\n        if (DOM.isElementNode(n))\n            stripCustomNsAttrs(/** @type {?} */ (n));\n    }\n}\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n * @param {?} defaultDoc\n * @param {?} unsafeHtmlInput\n * @return {?}\n */\nfunction sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    try {\n        var /** @type {?} */ containerEl = getInertElement();\n        // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n        var /** @type {?} */ unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n        // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n        var /** @type {?} */ mXSSAttempts = 5;\n        var /** @type {?} */ parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            DOM.setInnerHTML(containerEl, unsafeHtml);\n            if (defaultDoc.documentMode) {\n                // strip custom-namespaced attributes on IE<=11\n                stripCustomNsAttrs(containerEl);\n            }\n            parsedHtml = DOM.getInnerHTML(containerEl);\n        } while (unsafeHtml !== parsedHtml);\n        var /** @type {?} */ sanitizer = new SanitizingHtmlSerializer();\n        var /** @type {?} */ safeHtml = sanitizer.sanitizeChildren(DOM.getTemplateContent(containerEl) || containerEl);\n        // Clear out the body element.\n        var /** @type {?} */ parent_1 = DOM.getTemplateContent(containerEl) || containerEl;\n        for (var _i = 0, _a = DOM.childNodesAsList(parent_1); _i < _a.length; _i++) {\n            var child = _a[_i];\n            DOM.removeChild(parent_1, child);\n        }\n        if (core.isDevMode() && sanitizer.sanitizedSomething) {\n            DOM.log('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n        }\n        return safeHtml;\n    }\n    catch (/** @type {?} */ e) {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        inertElement = null;\n        throw e;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nvar VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nvar TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nvar COLOR_FNS = '(?:rgb|hsl)a?';\nvar GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nvar CSS3_FNS = '(?:calc|attr)';\nvar FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nvar SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n    (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n    (FN_ARGS + \")$\"), 'g');\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nvar URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n * @param {?} value\n * @return {?}\n */\nfunction hasBalancedQuotes(value) {\n    var /** @type {?} */ outsideSingle = true;\n    var /** @type {?} */ outsideDouble = true;\n    for (var /** @type {?} */ i = 0; i < value.length; i++) {\n        var /** @type {?} */ c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n * @param {?} value\n * @return {?}\n */\nfunction sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n    // reasoning behind this.\n    var /** @type {?} */ urlMatch = value.match(URL_RE);\n    if ((urlMatch && sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (core.isDevMode()) {\n        getDOM().log(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n    }\n    return 'unsafe';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marker interface for a value that's safe to use in a particular context.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Marker interface for a value that's safe to use as HTML.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Marker interface for a value that's safe to use as style (CSS).\n *\n * \\@stable\n * @record\n */\n\n/**\n * Marker interface for a value that's safe to use as JavaScript.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Marker interface for a value that's safe to use as a URL linking to a document.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Marker interface for a value that's safe to use as a URL to load executable code from.\n *\n * \\@stable\n * @record\n */\n\n/**\n * DomSanitizer helps preventing Cross Site Scripting Security bugs (XSS) by sanitizing\n * values to be safe to use in the different DOM contexts.\n *\n * For example, when binding a URL in an `<a [href]=\"someValue\">` hyperlink, `someValue` will be\n * sanitized so that an attacker cannot inject e.g. a `javascript:` URL that would execute code on\n * the website.\n *\n * In specific situations, it might be necessary to disable sanitization, for example if the\n * application genuinely needs to produce a `javascript:` style link with a dynamic value in it.\n * Users can bypass security by constructing a value with one of the `bypassSecurityTrust...`\n * methods, and then binding to that value from the template.\n *\n * These situations should be very rare, and extraordinary care must be taken to avoid creating a\n * Cross Site Scripting (XSS) security bug!\n *\n * When using `bypassSecurityTrust...`, make sure to call the method as early as possible and as\n * close as possible to the source of the value, to make it easy to verify no security bug is\n * created by its use.\n *\n * It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that\n * does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous\n * code. The sanitizer leaves safe values intact.\n *\n * \\@security Calling any of the `bypassSecurityTrust...` APIs disables Angular's built-in\n * sanitization for the value passed in. Carefully check and audit all values and code paths going\n * into this call. Make sure any user data is appropriately escaped for this security context.\n * For more detail, see the [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n * @abstract\n */\nvar DomSanitizer = (function () {\n    function DomSanitizer() {\n    }\n    return DomSanitizer;\n}());\nvar DomSanitizerImpl = (function (_super) {\n    __extends(DomSanitizerImpl, _super);\n    function DomSanitizerImpl(_doc) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizerImpl.prototype.sanitize = /**\n     * @param {?} ctx\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, value) {\n        if (value == null)\n            return null;\n        switch (ctx) {\n            case core.SecurityContext.NONE:\n                return /** @type {?} */ (value);\n            case core.SecurityContext.HTML:\n                if (value instanceof SafeHtmlImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'HTML');\n                return sanitizeHtml(this._doc, String(value));\n            case core.SecurityContext.STYLE:\n                if (value instanceof SafeStyleImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'Style');\n                return sanitizeStyle(/** @type {?} */ (value));\n            case core.SecurityContext.SCRIPT:\n                if (value instanceof SafeScriptImpl)\n                    return value.changingThisBreaksApplicationSecurity;\n                this.checkNotSafeValue(value, 'Script');\n                throw new Error('unsafe value used in a script context');\n            case core.SecurityContext.URL:\n                if (value instanceof SafeResourceUrlImpl || value instanceof SafeUrlImpl) {\n                    // Allow resource URLs in URL contexts, they are strictly more trusted.\n                    return value.changingThisBreaksApplicationSecurity;\n                }\n                this.checkNotSafeValue(value, 'URL');\n                return sanitizeUrl(String(value));\n            case core.SecurityContext.RESOURCE_URL:\n                if (value instanceof SafeResourceUrlImpl) {\n                    return value.changingThisBreaksApplicationSecurity;\n                }\n                this.checkNotSafeValue(value, 'ResourceURL');\n                throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n            default:\n                throw new Error(\"Unexpected SecurityContext \" + ctx + \" (see http://g.co/ng/security#xss)\");\n        }\n    };\n    /**\n     * @param {?} value\n     * @param {?} expectedType\n     * @return {?}\n     */\n    DomSanitizerImpl.prototype.checkNotSafeValue = /**\n     * @param {?} value\n     * @param {?} expectedType\n     * @return {?}\n     */\n    function (value, expectedType) {\n        if (value instanceof SafeValueImpl) {\n            throw new Error(\"Required a safe \" + expectedType + \", got a \" + value.getTypeName() + \" \" +\n                \"(see http://g.co/ng/security#xss)\");\n        }\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizerImpl.prototype.bypassSecurityTrustHtml = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new SafeHtmlImpl(value); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizerImpl.prototype.bypassSecurityTrustStyle = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new SafeStyleImpl(value); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizerImpl.prototype.bypassSecurityTrustScript = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new SafeScriptImpl(value); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizerImpl.prototype.bypassSecurityTrustUrl = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new SafeUrlImpl(value); };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DomSanitizerImpl.prototype.bypassSecurityTrustResourceUrl = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new SafeResourceUrlImpl(value);\n    };\n    DomSanitizerImpl.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    DomSanitizerImpl.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [DOCUMENT$1,] },] },\n    ]; };\n    return DomSanitizerImpl;\n}(DomSanitizer));\n/**\n * @abstract\n */\nvar SafeValueImpl = (function () {\n    function SafeValueImpl(changingThisBreaksApplicationSecurity) {\n        // empty\n        this.changingThisBreaksApplicationSecurity = changingThisBreaksApplicationSecurity;\n    }\n    /**\n     * @return {?}\n     */\n    SafeValueImpl.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"SafeValue must use [property]=binding: \" + this.changingThisBreaksApplicationSecurity +\n            \" (see http://g.co/ng/security#xss)\";\n    };\n    return SafeValueImpl;\n}());\nvar SafeHtmlImpl = (function (_super) {\n    __extends(SafeHtmlImpl, _super);\n    function SafeHtmlImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    SafeHtmlImpl.prototype.getTypeName = /**\n     * @return {?}\n     */\n    function () { return 'HTML'; };\n    return SafeHtmlImpl;\n}(SafeValueImpl));\nvar SafeStyleImpl = (function (_super) {\n    __extends(SafeStyleImpl, _super);\n    function SafeStyleImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    SafeStyleImpl.prototype.getTypeName = /**\n     * @return {?}\n     */\n    function () { return 'Style'; };\n    return SafeStyleImpl;\n}(SafeValueImpl));\nvar SafeScriptImpl = (function (_super) {\n    __extends(SafeScriptImpl, _super);\n    function SafeScriptImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    SafeScriptImpl.prototype.getTypeName = /**\n     * @return {?}\n     */\n    function () { return 'Script'; };\n    return SafeScriptImpl;\n}(SafeValueImpl));\nvar SafeUrlImpl = (function (_super) {\n    __extends(SafeUrlImpl, _super);\n    function SafeUrlImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    SafeUrlImpl.prototype.getTypeName = /**\n     * @return {?}\n     */\n    function () { return 'URL'; };\n    return SafeUrlImpl;\n}(SafeValueImpl));\nvar SafeResourceUrlImpl = (function (_super) {\n    __extends(SafeResourceUrlImpl, _super);\n    function SafeResourceUrlImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @return {?}\n     */\n    SafeResourceUrlImpl.prototype.getTypeName = /**\n     * @return {?}\n     */\n    function () { return 'ResourceURL'; };\n    return SafeResourceUrlImpl;\n}(SafeValueImpl));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar INTERNAL_BROWSER_PLATFORM_PROVIDERS = [\n    { provide: core.PLATFORM_ID, useValue: common.ɵPLATFORM_BROWSER_ID },\n    { provide: core.PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true },\n    { provide: common.PlatformLocation, useClass: BrowserPlatformLocation, deps: [DOCUMENT$1] },\n    { provide: DOCUMENT$1, useFactory: _document, deps: [] },\n];\n/**\n * \\@stable\n */\nvar platformBrowser = core.createPlatformFactory(core.platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n/**\n * @return {?}\n */\nfunction initDomAdapter() {\n    BrowserDomAdapter.makeCurrent();\n    BrowserGetTestability.init();\n}\n/**\n * @return {?}\n */\nfunction _document() {\n    return document;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar win = typeof window !== 'undefined' && window || /** @type {?} */ ({});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ChangeDetectionPerfRecord = (function () {\n    function ChangeDetectionPerfRecord(msPerTick, numTicks) {\n        this.msPerTick = msPerTick;\n        this.numTicks = numTicks;\n    }\n    return ChangeDetectionPerfRecord;\n}());\n/**\n * Entry point for all Angular profiling-related debug tools. This object\n * corresponds to the `ng.profiler` in the dev console.\n */\nvar AngularProfiler = (function () {\n    function AngularProfiler(ref) {\n        this.appRef = ref.injector.get(core.ApplicationRef);\n    }\n    // tslint:disable:no-console\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     */\n    /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    AngularProfiler.prototype.timeChangeDetection = /**\n     * Exercises change detection in a loop and then prints the average amount of\n     * time in milliseconds how long a single round of change detection takes for\n     * the current state of the UI. It runs a minimum of 5 rounds for a minimum\n     * of 500 milliseconds.\n     *\n     * Optionally, a user may pass a `config` parameter containing a map of\n     * options. Supported options are:\n     *\n     * `record` (boolean) - causes the profiler to record a CPU profile while\n     * it exercises the change detector. Example:\n     *\n     * ```\n     * ng.profiler.timeChangeDetection({record: true})\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        var /** @type {?} */ record = config && config['record'];\n        var /** @type {?} */ profileName = 'Change Detection';\n        // Profiler is not available in Android browsers, nor in IE 9 without dev tools opened\n        var /** @type {?} */ isProfilerAvailable = win.console.profile != null;\n        if (record && isProfilerAvailable) {\n            win.console.profile(profileName);\n        }\n        var /** @type {?} */ start = getDOM().performanceNow();\n        var /** @type {?} */ numTicks = 0;\n        while (numTicks < 5 || (getDOM().performanceNow() - start) < 500) {\n            this.appRef.tick();\n            numTicks++;\n        }\n        var /** @type {?} */ end = getDOM().performanceNow();\n        if (record && isProfilerAvailable) {\n            // need to cast to <any> because type checker thinks there's no argument\n            // while in fact there is:\n            //\n            // https://developer.mozilla.org/en-US/docs/Web/API/Console/profileEnd\n            (/** @type {?} */ (win.console.profileEnd))(profileName);\n        }\n        var /** @type {?} */ msPerTick = (end - start) / numTicks;\n        win.console.log(\"ran \" + numTicks + \" change detection cycles\");\n        win.console.log(msPerTick.toFixed(2) + \" ms per check\");\n        return new ChangeDetectionPerfRecord(msPerTick, numTicks);\n    };\n    return AngularProfiler;\n}());\n\n/**\n * A key value store that is transferred from the application on the server side to the application\n * on the client side.\n *\n * `TransferState` will be available as an injectable token. To use it import\n * `ServerTransferStateModule` on the server and `BrowserTransferStateModule` on the client.\n *\n * The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only\n * boolean, number, string, null and non-class objects will be serialized and deserialzied in a\n * non-lossy manner.\n *\n * \\@experimental\n */\nvar TransferState = (function () {\n    function TransferState() {\n        this.store = {};\n        this.onSerializeCallbacks = {};\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} initState\n     * @return {?}\n     */\n    TransferState.init = /**\n     * \\@internal\n     * @param {?} initState\n     * @return {?}\n     */\n    function (initState) {\n        var /** @type {?} */ transferState = new TransferState();\n        transferState.store = initState;\n        return transferState;\n    };\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     */\n    /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     * @template T\n     * @param {?} key\n     * @param {?} defaultValue\n     * @return {?}\n     */\n    TransferState.prototype.get = /**\n     * Get the value corresponding to a key. Return `defaultValue` if key is not found.\n     * @template T\n     * @param {?} key\n     * @param {?} defaultValue\n     * @return {?}\n     */\n    function (key, defaultValue) { return /** @type {?} */ (this.store[key]) || defaultValue; };\n    /**\n     * Set the value corresponding to a key.\n     */\n    /**\n     * Set the value corresponding to a key.\n     * @template T\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    TransferState.prototype.set = /**\n     * Set the value corresponding to a key.\n     * @template T\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) { this.store[key] = value; };\n    /**\n     * Remove a key from the store.\n     */\n    /**\n     * Remove a key from the store.\n     * @template T\n     * @param {?} key\n     * @return {?}\n     */\n    TransferState.prototype.remove = /**\n     * Remove a key from the store.\n     * @template T\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) { delete this.store[key]; };\n    /**\n     * Test whether a key exists in the store.\n     */\n    /**\n     * Test whether a key exists in the store.\n     * @template T\n     * @param {?} key\n     * @return {?}\n     */\n    TransferState.prototype.hasKey = /**\n     * Test whether a key exists in the store.\n     * @template T\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) { return this.store.hasOwnProperty(key); };\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     */\n    /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     * @template T\n     * @param {?} key\n     * @param {?} callback\n     * @return {?}\n     */\n    TransferState.prototype.onSerialize = /**\n     * Register a callback to provide the value for a key when `toJson` is called.\n     * @template T\n     * @param {?} key\n     * @param {?} callback\n     * @return {?}\n     */\n    function (key, callback) {\n        this.onSerializeCallbacks[key] = callback;\n    };\n    /**\n     * Serialize the current state of the store to JSON.\n     */\n    /**\n     * Serialize the current state of the store to JSON.\n     * @return {?}\n     */\n    TransferState.prototype.toJson = /**\n     * Serialize the current state of the store to JSON.\n     * @return {?}\n     */\n    function () {\n        // Call the onSerialize callbacks and put those values into the store.\n        for (var /** @type {?} */ key in this.onSerializeCallbacks) {\n            if (this.onSerializeCallbacks.hasOwnProperty(key)) {\n                try {\n                    this.store[key] = this.onSerializeCallbacks[key]();\n                }\n                catch (/** @type {?} */ e) {\n                    console.warn('Exception in onSerialize callback: ', e);\n                }\n            }\n        }\n        return JSON.stringify(this.store);\n    };\n    TransferState.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    TransferState.ctorParameters = function () { return []; };\n    return TransferState;\n}());\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new core.Version('5.0.0');\n\n/**\n * @license angular-library-starter\n * MIT license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar BlogUtils = (function () {\n    function BlogUtils() {\n    }\n    /**\n     * @param {?} htmlString\n     * @param {?} isMobile\n     * @return {?}\n     */\n    BlogUtils.massageText = /**\n     * @param {?} htmlString\n     * @param {?} isMobile\n     * @return {?}\n     */\n    function (htmlString, isMobile) {\n        if (!htmlString)\n            return (htmlString = '');\n        var /** @type {?} */ textElement = document.createElement('div');\n        textElement.innerHTML = htmlString;\n        var /** @type {?} */ imgs = textElement.querySelectorAll('img');\n        for (var /** @type {?} */ i = 0; i < imgs.length; i++) {\n            imgs.item(i).src = imgs\n                .item(i)\n                .src.replace('downloads.contentful', 'images.contentful');\n            if (!imgs.item(i).src.includes('.gif')) {\n                if (isMobile) {\n                    imgs.item(i).src += '?w=700';\n                }\n                else {\n                    imgs.item(i).src += '?w=1500';\n                }\n            }\n        }\n        var /** @type {?} */ as = textElement.querySelectorAll('a');\n        for (var /** @type {?} */ i = 0; i < as.length; i++) {\n            as.item(i).setAttribute('target', '_blank');\n        }\n        return textElement.innerHTML;\n    };\n    return BlogUtils;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar GeoIpService = (function () {\n    function GeoIpService(http$$1) {\n        this.http = http$$1;\n    }\n    /**\n     * @return {?}\n     */\n    GeoIpService.prototype.get = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ url = 'https://api.sebastianmoreno.se/api/geoip';\n        return this.http.get(url)\n            .pipe(operators.publishReplay(1), operators.refCount());\n    };\n    GeoIpService.decorators = [\n        { type: core.Injectable },\n    ];\n    /** @nocollapse */\n    GeoIpService.ctorParameters = function () { return [\n        { type: HttpClient, },\n    ]; };\n    return GeoIpService;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DynamicImageComponent = (function () {\n    function DynamicImageComponent(elem) {\n        this.elem = elem;\n        this.align = 'center center';\n        this.sizemode = 'fit';\n        this.scale = 1;\n        this.loaded = false;\n    }\n    /**\n     * @return {?}\n     */\n    DynamicImageComponent.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.assetRatio = this.resolution.width / this.resolution.height;\n        this.spacerStyle = this.resolution.height / this.resolution.width * 100 + \"%\";\n        this.timeoutFunc = setTimeout(function () {\n            _this.getSize();\n            if (_this.height > 0 && _this.width == 0) {\n                _this.mainSide = 'autoheight';\n            }\n            else if (_this.width > 0 && _this.height == 0) {\n                _this.mainSide = 'autowidth';\n            }\n            else {\n                if (_this.sizemode == 'crop') {\n                    _this.mainSide = _this.assetRatio > 1 ? 'height' : 'width';\n                }\n                else {\n                    _this.mainSide = _this.assetRatio < 1 ? 'height' : 'width';\n                }\n            }\n            _this.resize();\n            _this.getServingUrl();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    DynamicImageComponent.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        clearTimeout(this.timeoutFunc);\n    };\n    /**\n     * @return {?}\n     */\n    DynamicImageComponent.prototype.getSize = /**\n     * @return {?}\n     */\n    function () {\n        this.width = this.elem.nativeElement.children[0].clientWidth;\n        this.height = this.elem.nativeElement.children[0].clientHeight;\n    };\n    /**\n     * @return {?}\n     */\n    DynamicImageComponent.prototype.getServingUrl = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ servingSize;\n        if (this.mainSide === 'autoheight') {\n            servingSize = Math.round(Math.max(this.height, this.height * this.assetRatio));\n        }\n        else if (this.sizemode === 'crop' && this.height) {\n            if (this.assetRatio <= this.wrapperRatio) {\n                servingSize = Math.round(Math.max(this.width, this.width / this.assetRatio));\n            }\n            else {\n                servingSize = Math.round(Math.max(this.height, this.height * this.assetRatio));\n            }\n        }\n        else {\n            if (this.assetRatio <= this.wrapperRatio && this.height) {\n                servingSize = Math.round(Math.max(this.height, this.height * this.assetRatio));\n            }\n            else {\n                servingSize = Math.round(Math.max(this.width, this.width / this.assetRatio));\n            }\n        }\n        servingSize = Math.min(servingSize * (Math.ceil(window.devicePixelRatio) || 1), 4000);\n        servingSize = parseInt(servingSize);\n        if (servingSize === this.servingSize) {\n            this.loaded = true;\n            return;\n        }\n        this.servingSize = Math.max(servingSize, 60);\n        this.servingUrl = this.url + '?w=' + (this.servingSize * this.scale);\n        this.render();\n    };\n    /**\n     * @return {?}\n     */\n    DynamicImageComponent.prototype.resize = /**\n     * @return {?}\n     */\n    function () {\n        if (this.mainSide !== 'autoheight' && this.mainSide !== 'autowidth') {\n            this.wrapperRatio = this.width / this.height;\n            if (this.sizemode === 'crop') {\n                this.mainSide = this.assetRatio < this.wrapperRatio ? 'width' : 'height';\n            }\n            else {\n                this.mainSide = this.assetRatio > this.wrapperRatio ? 'width' : 'height';\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DynamicImageComponent.prototype.render = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ img = new Image();\n        img.onload = function () {\n            _this.imgUrl = _this.servingUrl;\n            _this.loaded = true;\n        };\n        img.src = this.servingUrl;\n    };\n    DynamicImageComponent.decorators = [\n        { type: core.Component, args: [{\n                    selector: 'dynamic-image',\n                    template: \"\\n  <div [class.loaded]=\\\"loaded\\\" class=\\\"dynamic-image-content {{align}} {{sizemode}} {{mainSide}}\\\">\\n    <div [style.paddingBottom]=\\\"spacerStyle\\\" class=\\\"spacer\\\"></div>\\n    <img [src]=\\\"imgUrl\\\" *ngIf=\\\"imgUrl\\\" class=\\\"large\\\"/>\\n  </div>\\n  \",\n                    styles: [\"\\n    :host {\\n      display: block;\\n    }\\n\\n    .dynamic-image-content {\\n      position: relative;\\n      overflow: hidden;\\n      box-sizing: border-box;\\n    }\\n\\n    .dynamic-image-content.absolute {\\n      position: absolute;\\n      top: 0;\\n      right: 0;\\n      bottom: 0;\\n      left: 0;\\n    }\\n\\n    .dynamic-image-content pre {\\n      position: absolute;\\n      top: 50%;\\n      left: 50%;\\n      transform: translate(-50%, -50%);\\n      background: white;\\n      padding: 0;\\n      font-size: .75em;\\n      line-height: 1.6em;\\n    }\\n\\n    .dynamic-image-content img {\\n      position: absolute;\\n      padding: 0;\\n      margin: 0;\\n      line-height: 0;\\n    }\\n\\n    .dynamic-image-content img.small {\\n      opacity: 1;\\n    }\\n\\n    .dynamic-image-content img.large {\\n      opacity: 0;\\n      transition: opacity .75s;\\n    }\\n\\n    .dynamic-image-content.noplaceholder img.small {\\n      visibility: hidden;\\n    }\\n\\n    .dynamic-image-content.fit.height img {\\n      height: 100%;\\n    }\\n\\n    .dynamic-image-content.fit.width img {\\n      width: 100%;\\n    }\\n\\n    .dynamic-image-content.fit.autoheight {\\n      line-height: 0;\\n    }\\n\\n    .dynamic-image-content.fit.autoheight .spacer {\\n      display: none;\\n    }\\n\\n    .dynamic-image-content.fit.autoheight img {\\n      position: relative;\\n      left: initial;\\n      right: initial;\\n      bottom: initial;\\n      top: initial;\\n      transform: none;\\n      height: 100%;\\n      width: auto;\\n    }\\n\\n    .dynamic-image-content.fit.autowidth img {\\n      position: absolute;\\n      width: 100%;\\n    }\\n\\n    .dynamic-image-content.crop.height img {\\n      height: 100%;\\n      max-width: initial;\\n    }\\n\\n    .dynamic-image-content.crop.width img {\\n      width: 100%;\\n      max-height: initial;\\n    }\\n\\n    .dynamic-image-content.loaded img {\\n      border: 0;\\n    }\\n\\n    .dynamic-image-content.loaded img.large {\\n      opacity: 1;\\n    }\\n\\n    .dynamic-image-content.loaded img.small {\\n      opacity: 0;\\n      position: absolute;\\n    }\\n\\n    .dynamic-image-content.center img {\\n      left: 50%;\\n      right: initial;\\n      top: 50%;\\n      bottom: initial;\\n      transform: translateX(-50%) translateY(-50%);\\n    }\\n\\n    .dynamic-image-content.left.center img {\\n      top: 50%;\\n      right: initial;\\n      left: 0;\\n      bottom: initial;\\n      transform: translateX(0%) translateY(-50%);\\n    }\\n\\n    .dynamic-image-content.right.center img {\\n      top: 50%;\\n      right: 0;\\n      left: initial;\\n      bottom: initial;\\n      transform: translateX(0%) translateY(-50%);\\n    }\\n\\n    .dynamic-image-content.left.top img {\\n      top: 0;\\n      right: initial;\\n      bottom: initial;\\n      left: 0;\\n      transform: translateX(0%) translateY(0%);\\n    }\\n\\n    .dynamic-image-content.center.top img {\\n      top: 0;\\n      right: initial;\\n      bottom: initial;\\n      left: 50%;\\n      transform: translateX(-50%) translateY(0%);\\n    }\\n\\n    .dynamic-image-content.right.top img {\\n      top: 0;\\n      right: 0;\\n      bottom: initial;\\n      left: initial;\\n      transform: translateX(0%) translateY(0%);\\n    }\\n\\n    .dynamic-image-content.left.bottom img {\\n      top: initial;\\n      right: initial;\\n      bottom: 0;\\n      left: 0;\\n      transform: translateX(0%) translateY(0%);\\n    }\\n\\n    .dynamic-image-content.center.bottom img {\\n      top: initial;\\n      right: initial;\\n      bottom: 0;\\n      left: 50%;\\n      transform: translateX(-50%) translateY(0%);\\n    }\\n\\n    .dynamic-image-content.right.bottom img {\\n      top: initial;\\n      right: 0;\\n      bottom: 0;\\n      left: initial;\\n      transform: translateX(0%) translateY(0%);\\n    }\\n  \"]\n                },] },\n    ];\n    /** @nocollapse */\n    DynamicImageComponent.ctorParameters = function () { return [\n        { type: core.ElementRef, },\n    ]; };\n    DynamicImageComponent.propDecorators = {\n        \"url\": [{ type: core.Input },],\n        \"resolution\": [{ type: core.Input },],\n        \"align\": [{ type: core.Input },],\n        \"sizemode\": [{ type: core.Input },],\n        \"scale\": [{ type: core.Input },],\n    };\n    return DynamicImageComponent;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DynamicImageModule = (function () {\n    function DynamicImageModule() {\n    }\n    DynamicImageModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [\n                        common.CommonModule\n                    ],\n                    exports: [\n                        DynamicImageComponent\n                    ],\n                    declarations: [\n                        DynamicImageComponent\n                    ],\n                    providers: [],\n                },] },\n    ];\n    /** @nocollapse */\n    DynamicImageModule.ctorParameters = function () { return []; };\n    return DynamicImageModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar SafeHtmlPipe = (function () {\n    function SafeHtmlPipe(sanitizer) {\n        this.sanitizer = sanitizer;\n    }\n    /**\n     * @param {?} value\n     * @param {?} args\n     * @return {?}\n     */\n    SafeHtmlPipe.prototype.transform = /**\n     * @param {?} value\n     * @param {?} args\n     * @return {?}\n     */\n    function (value, args) {\n        if (!value) {\n            return '';\n        }\n        return this.sanitizer.bypassSecurityTrustHtml(value);\n    };\n    SafeHtmlPipe.decorators = [\n        { type: core.Pipe, args: [{\n                    name: 'pipe-safeHtml'\n                },] },\n    ];\n    /** @nocollapse */\n    SafeHtmlPipe.ctorParameters = function () { return [\n        { type: DomSanitizer, },\n    ]; };\n    return SafeHtmlPipe;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar SwiperDirective = (function () {\n    function SwiperDirective(elem) {\n        this.elem = elem;\n        this.swiper = {};\n    }\n    /**\n     * @return {?}\n     */\n    SwiperDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        setTimeout(function () {\n            var /** @type {?} */ slider = new Swiper(_this.elem.nativeElement, _this.swiper);\n        });\n    };\n    SwiperDirective.decorators = [\n        { type: core.Directive, args: [{ selector: '[swiper]' },] },\n    ];\n    /** @nocollapse */\n    SwiperDirective.ctorParameters = function () { return [\n        { type: core.ElementRef, },\n    ]; };\n    SwiperDirective.propDecorators = {\n        \"swiper\": [{ type: core.Input },],\n    };\n    return SwiperDirective;\n}());\n\nexports.BlogUtils = BlogUtils;\nexports.GeoIpService = GeoIpService;\nexports.DynamicImageModule = DynamicImageModule;\nexports.SafeHtmlPipe = SafeHtmlPipe;\nexports.SwiperDirective = SwiperDirective;\nexports.ɵa = DynamicImageComponent;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=sebasdd-ngx-common.umd.js.map\n"]}