{"version":3,"file":"geoip.service.js","sourceRoot":"","sources":["../../src/geoip/geoip.service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAA2C;AAC3C,6CAAkD;AAElD,4CAAyD;AAIzD;IAEE,sBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAEjC,0BAAG,GAAV;QACE,IAAM,GAAG,GAAW,0CAA0C,CAAC;QAC/D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;aACtB,IAAI,CACH,yBAAa,CAAC,CAAC,CAAC,EAChB,oBAAQ,EAAE,CACX,CAAC;IACN,CAAC;IAXU,YAAY;QADxB,iBAAU,EAAE;6DAGe,iBAAU,oBAAV,iBAAU;OAFzB,YAAY,CAYxB;IAAD,mBAAC;;CAAA,AAZD,IAYC;AAZY,oCAAY","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { refCount, publishReplay } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Observable';\n\n@Injectable()\nexport class GeoIpService {\n\n  constructor(private http: HttpClient) {}\n\n  public get(): Observable<any> {\n    const url: string = 'https://api.sebastianmoreno.se/api/geoip';\n    return this.http.get(url)\n      .pipe(\n        publishReplay(1),\n        refCount()\n      );\n  }\n}\n"]}