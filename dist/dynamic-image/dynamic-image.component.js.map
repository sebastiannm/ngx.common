{"version":3,"file":"dynamic-image.component.js","sourceRoot":"","sources":["../../src/dynamic-image/dynamic-image.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, OnInit, OnDestroy, ElementRef } from '@angular/core'\n\n@Component({\n  selector: 'dynamic-image',\n  template: `\n  <div [class.loaded]=\"loaded\" class=\"dynamic-image-content {{align}} {{sizemode}} {{mainSide}}\">\n    <div [style.paddingBottom]=\"spacerStyle\" class=\"spacer\"></div>\n    <img [src]=\"imgUrl\" *ngIf=\"imgUrl\" class=\"large\"/>\n  </div>\n  `,\n  styles: [\n    `\n      \\:host {\n        display: block;\n      }\n\n      .dynamic-image-content {\n        position: relative;\n        overflow: hidden;\n        box-sizing: border-box;\n      }\n\n      .dynamic-image-content.absolute {\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n      }\n\n      .dynamic-image-content pre {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        background: white;\n        padding: 0;\n        font-size: 0.75em;\n        line-height: 1.6em;\n      }\n\n      .dynamic-image-content img {\n        position: absolute;\n        padding: 0;\n        margin: 0;\n        line-height: 0;\n      }\n\n      .dynamic-image-content img.small {\n        opacity: 1;\n      }\n\n      .dynamic-image-content img.large {\n        opacity: 0;\n        transition: opacity 0.75s;\n      }\n\n      .dynamic-image-content.noplaceholder img.small {\n        visibility: hidden;\n      }\n\n      .dynamic-image-content.fit.height img {\n        height: 100%;\n      }\n\n      .dynamic-image-content.fit.width img {\n        width: 100%;\n      }\n\n      .dynamic-image-content.fit.autoheight {\n        line-height: 0;\n      }\n\n      .dynamic-image-content.fit.autoheight .spacer {\n        display: none;\n      }\n\n      .dynamic-image-content.fit.autoheight img {\n        position: relative;\n        left: initial;\n        right: initial;\n        bottom: initial;\n        top: initial;\n        transform: none;\n        height: 100%;\n        width: auto;\n      }\n\n      .dynamic-image-content.fit.autowidth img {\n        position: absolute;\n        width: 100%;\n      }\n\n      .dynamic-image-content.crop.height img {\n        height: 100%;\n        max-width: initial;\n      }\n\n      .dynamic-image-content.crop.width img {\n        width: 100%;\n        max-height: initial;\n      }\n\n      .dynamic-image-content.loaded img {\n        border: 0;\n      }\n\n      .dynamic-image-content.loaded img.large {\n        opacity: 1;\n      }\n\n      .dynamic-image-content.loaded img.small {\n        opacity: 0;\n        position: absolute;\n      }\n\n      .dynamic-image-content.center img {\n        left: 50%;\n        right: initial;\n        top: 50%;\n        bottom: initial;\n        transform: translateX(-50%) translateY(-50%);\n      }\n\n      .dynamic-image-content.left.center img {\n        top: 50%;\n        right: initial;\n        left: 0;\n        bottom: initial;\n        transform: translateX(0%) translateY(-50%);\n      }\n\n      .dynamic-image-content.right.center img {\n        top: 50%;\n        right: 0;\n        left: initial;\n        bottom: initial;\n        transform: translateX(0%) translateY(-50%);\n      }\n\n      .dynamic-image-content.left.top img {\n        top: 0;\n        right: initial;\n        bottom: initial;\n        left: 0;\n        transform: translateX(0%) translateY(0%);\n      }\n\n      .dynamic-image-content.center.top img {\n        top: 0;\n        right: initial;\n        bottom: initial;\n        left: 50%;\n        transform: translateX(-50%) translateY(0%);\n      }\n\n      .dynamic-image-content.right.top img {\n        top: 0;\n        right: 0;\n        bottom: initial;\n        left: initial;\n        transform: translateX(0%) translateY(0%);\n      }\n\n      .dynamic-image-content.left.bottom img {\n        top: initial;\n        right: initial;\n        bottom: 0;\n        left: 0;\n        transform: translateX(0%) translateY(0%);\n      }\n\n      .dynamic-image-content.center.bottom img {\n        top: initial;\n        right: initial;\n        bottom: 0;\n        left: 50%;\n        transform: translateX(-50%) translateY(0%);\n      }\n\n      .dynamic-image-content.right.bottom img {\n        top: initial;\n        right: 0;\n        bottom: 0;\n        left: initial;\n        transform: translateX(0%) translateY(0%);\n      }\n    `\n  ]\n})\nexport class DynamicImageComponent implements OnInit, OnDestroy {\n  @Input()\n  public url: string\n  @Input()\n  public resolution: any\n  @Input()\n  public align: string = 'center center'\n  @Input()\n  public sizemode: string = 'fit'\n  @Input()\n  public scale: number = 1\n  public loaded: boolean = false\n  public spacerStyle: any\n  public assetRatio: number\n  public mainSide: string\n  public imgUrl: string\n  private wrapperRatio: number\n  private width: number\n  private height: number\n  private servingUrl: string\n  private servingSize: any\n  private timeoutFunc: any\n\n  constructor(private elem: ElementRef) {}\n\n  public ngOnInit() {\n    this.assetRatio = this.resolution.width / this.resolution.height\n    this.spacerStyle = `${(this.resolution.height / this.resolution.width) *\n      100}%`\n\n    this.timeoutFunc = setTimeout(() => {\n      this.getSize()\n\n      if (this.height > 0 && this.width == 0) {\n        this.mainSide = 'autoheight'\n      } else if (this.width > 0 && this.height === 0) {\n        this.mainSide = 'autowidth'\n      } else {\n        if (this.sizemode === 'crop') {\n          this.mainSide = this.assetRatio > 1 ? 'height' : 'width'\n        } else {\n          this.mainSide = this.assetRatio < 1 ? 'height' : 'width'\n        }\n      }\n\n      this.resize()\n      this.getServingUrl()\n    })\n  }\n\n  public ngOnDestroy() {\n    clearTimeout(this.timeoutFunc)\n  }\n\n  private getSize() {\n    this.width = this.elem.nativeElement.children[0].clientWidth\n    this.height = this.elem.nativeElement.children[0].clientHeight\n  }\n\n  private getServingUrl() {\n    let servingSize: any\n\n    if (this.mainSide === 'autoheight') {\n      servingSize = Math.round(\n        Math.max(this.height, this.height * this.assetRatio)\n      )\n    } else if (this.sizemode === 'crop' && this.height) {\n      if (this.assetRatio <= this.wrapperRatio) {\n        servingSize = Math.round(\n          Math.max(this.width, this.width / this.assetRatio)\n        )\n      } else {\n        servingSize = Math.round(\n          Math.max(this.height, this.height * this.assetRatio)\n        )\n      }\n    } else {\n      if (this.assetRatio <= this.wrapperRatio && this.height) {\n        servingSize = Math.round(\n          Math.max(this.height, this.height * this.assetRatio)\n        )\n      } else {\n        servingSize = Math.round(\n          Math.max(this.width, this.width / this.assetRatio)\n        )\n      }\n    }\n    servingSize = Math.min(\n      servingSize * (Math.ceil(window.devicePixelRatio) || 1),\n      4000\n    )\n    servingSize = parseInt(servingSize, 10)\n\n    if (servingSize === this.servingSize) {\n      this.loaded = true\n      return\n    }\n\n    this.servingSize = Math.max(servingSize, 60)\n    this.servingUrl = this.url + '?w=' + this.servingSize * this.scale\n\n    this.render()\n  }\n\n  private resize() {\n    if (this.mainSide !== 'autoheight' && this.mainSide !== 'autowidth') {\n      this.wrapperRatio = this.width / this.height\n      if (this.sizemode === 'crop') {\n        this.mainSide = this.assetRatio < this.wrapperRatio ? 'width' : 'height'\n      } else {\n        this.mainSide = this.assetRatio > this.wrapperRatio ? 'width' : 'height'\n      }\n    }\n  }\n\n  private render(): void {\n    const img: any = new Image()\n\n    img.onload = () => {\n      this.imgUrl = this.servingUrl\n      this.loaded = true\n    }\n\n    img.src = this.servingUrl\n  }\n}\n"]}